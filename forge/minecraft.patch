diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/Block.java ../src_work/minecraft/net/minecraft/src/Block.java
5a6
> import net.minecraft.src.forge.ForgeHooks;
272a274,278
>     
>     public int quantityDropped(int i, Random random)
>     {
>         return quantityDropped(random);
>     }
278a285,287
>     /* FORGE: This function isn't called by Minecraft anymore.  Use
>      * blockStrength(EntityPlayer,int) instead.
>      */
281,291c290
<         if(blockHardness < 0.0F)
<         {
<             return 0.0F;
<         }
<         if(!entityplayer.canHarvestBlock(this))
<         {
<             return 1.0F / blockHardness / 100F;
<         } else
<         {
<             return entityplayer.getCurrentPlayerStrVsBlock(this) / blockHardness / 30F;
<         }
---
>     	return blockStrength(entityplayer,0);
305c304
<         int i1 = quantityDropped(world.rand);
---
>         int i1 = quantityDropped(l, world.rand);
600a600,673
>     }
> 
>     /* FORGE: Implement and return true if you wish this block to behave
>      * like a ladder when the player is inside.
>      */
>     public boolean isLadder() {
> 	return false;
>     }
> 
>     /* FORGE: Return true if the block is a normal, solid cube.  This
>      * determines indirect power state, entity ejection from blocks, and a few
>      * others.
>      */
>     public boolean isBlockNormalCube(World world, int i, int j, int k) {
> 	    return blockMaterial.getIsTranslucent() && renderAsNormalBlock();
>     }
> 
>     /* FORGE: Return true if the block is solid on the given side.  This
>      * is used by placement logic. */
>     public boolean isBlockSolidOnSide( World world, int i, int j, int k,
> 		    int side ) {
> 	    return isBlockNormalCube(world,i,j,k);
>     }
> 
>     /* FORGE: Return true if the player can place a new block in the block
>      * occupied by this one, like water, lava, fire, etc.
>      */
>     public boolean isBlockReplaceable( World world, int i, int j, int k ) {
> 	    return false;
>     }
> 
>     /* FORGE: Return true if this block should set fire and deal fire damage
>      * to entities coming into contact with it, false otherwise.
>      */
>     public boolean isBlockBurning( World world, int i, int j, int k ) {
> 	    return false;
>     }
> 
>     /* FORGE: Return true if this block should be treated as an air block
>      * by the rest of the code, false otherwise.  This method is primarily
>      * useful for creating pure logic-blocks that will be invisible 
>      * to the player and otherwise interact as air would.  
>      */	
>     public boolean isAirBlock( World world, int i, int j, int k ) {
> 	    return false;
>     }
> 
>     /* FORGE: Return the block hardness with metadata 'md'.
>      */
>     public float getHardness(int md) {
> 	    return blockHardness;
>     }
> 
>     /* FORGE: Return the block strength of the block at i,j,k against the
>      * player.
>      */
>     public float blockStrength(World world, EntityPlayer player,
> 		    int i, int j, int k) {
> 	    int md=world.getBlockMetadata(i,j,k);
> 	    return blockStrength(player,md);
>     }
> 
>     /* FORGE: Return the block strength of a prototypical block with metadata
>      * 'md' against the player.
>      */
>     public float blockStrength(EntityPlayer player, int md) {
> 	    return ForgeHooks.blockStrength(this,player,md);
>     }
> 
>     /* FORGE: Return true if the player can harvest a prototypical block with
>      * metadata 'md'.
>      */
>     public boolean canHarvestBlock(EntityPlayer player, int md) {
> 	    return ForgeHooks.canHarvestBlock(this,player,md);
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/BlockButton.java ../src_work/minecraft/net/minecraft/src/BlockButton.java
44c44
<         if(l == 2 && world.isBlockNormalCube(i, j, k + 1))
---
>         if(l == 2 && world.isBlockSolidOnSide(i, j, k + 1,2))
48c48
<         if(l == 3 && world.isBlockNormalCube(i, j, k - 1))
---
>         if(l == 3 && world.isBlockSolidOnSide(i, j, k - 1,3))
52c52
<         if(l == 4 && world.isBlockNormalCube(i + 1, j, k))
---
>         if(l == 4 && world.isBlockSolidOnSide(i + 1, j, k,4))
56c56
<         return l == 5 && world.isBlockNormalCube(i - 1, j, k);
---
>         return l == 5 && world.isBlockSolidOnSide(i - 1, j, k,5);
61c61
<         if(world.isBlockNormalCube(i - 1, j, k))
---
>         if(world.isBlockSolidOnSide(i - 1, j, k,5))
65c65
<         if(world.isBlockNormalCube(i + 1, j, k))
---
>         if(world.isBlockSolidOnSide(i + 1, j, k,4))
69c69
<         if(world.isBlockNormalCube(i, j, k - 1))
---
>         if(world.isBlockSolidOnSide(i, j, k - 1,3))
73c73
<         return world.isBlockNormalCube(i, j, k + 1);
---
>         return world.isBlockSolidOnSide(i, j, k + 1,2);
81c81
<         if(l == 2 && world.isBlockNormalCube(i, j, k + 1))
---
>         if(l == 2 && world.isBlockSolidOnSide(i, j, k + 1,2))
85c85
<         if(l == 3 && world.isBlockNormalCube(i, j, k - 1))
---
>         if(l == 3 && world.isBlockSolidOnSide(i, j, k - 1,3))
89c89
<         if(l == 4 && world.isBlockNormalCube(i + 1, j, k))
---
>         if(l == 4 && world.isBlockSolidOnSide(i + 1, j, k,4))
93c93
<         if(l == 5 && world.isBlockNormalCube(i - 1, j, k))
---
>         if(l == 5 && world.isBlockSolidOnSide(i - 1, j, k,5))
105c105
<         if(world.isBlockNormalCube(i - 1, j, k))
---
>         if(world.isBlockSolidOnSide(i - 1, j, k,5))
109c109
<         if(world.isBlockNormalCube(i + 1, j, k))
---
>         if(world.isBlockSolidOnSide(i + 1, j, k,4))
113c113
<         if(world.isBlockNormalCube(i, j, k - 1))
---
>         if(world.isBlockSolidOnSide(i, j, k - 1,3))
117c117
<         return !world.isBlockNormalCube(i, j, k + 1) ? 1 : 4;
---
>         return !world.isBlockSolidOnSide(i, j, k + 1,2) ? 1 : 4;
126c126
<             if(!world.isBlockNormalCube(i - 1, j, k) && i1 == 1)
---
>             if(!world.isBlockSolidOnSide(i - 1, j, k,5) && i1 == 1)
130c130
<             if(!world.isBlockNormalCube(i + 1, j, k) && i1 == 2)
---
>             if(!world.isBlockSolidOnSide(i + 1, j, k,4) && i1 == 2)
134c134
<             if(!world.isBlockNormalCube(i, j, k - 1) && i1 == 3)
---
>             if(!world.isBlockSolidOnSide(i, j, k - 1,3) && i1 == 3)
138c138
<             if(!world.isBlockNormalCube(i, j, k + 1) && i1 == 4)
---
>             if(!world.isBlockSolidOnSide(i, j, k + 1,2) && i1 == 4)
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/BlockChest.java ../src_work/minecraft/net/minecraft/src/BlockChest.java
233c233
<         if(world.isBlockNormalCube(i, j + 1, k))
---
>         if(world.isBlockSolidOnSide(i, j + 1, k,0))
237c237
<         if(world.getBlockId(i - 1, j, k) == blockID && world.isBlockNormalCube(i - 1, j + 1, k))
---
>         if(world.getBlockId(i - 1, j, k) == blockID && world.isBlockSolidOnSide(i - 1, j + 1, k,0))
241c241
<         if(world.getBlockId(i + 1, j, k) == blockID && world.isBlockNormalCube(i + 1, j + 1, k))
---
>         if(world.getBlockId(i + 1, j, k) == blockID && world.isBlockSolidOnSide(i + 1, j + 1, k,0))
245c245
<         if(world.getBlockId(i, j, k - 1) == blockID && world.isBlockNormalCube(i, j + 1, k - 1))
---
>         if(world.getBlockId(i, j, k - 1) == blockID && world.isBlockSolidOnSide(i, j + 1, k - 1,0))
249c249
<         if(world.getBlockId(i, j, k + 1) == blockID && world.isBlockNormalCube(i, j + 1, k + 1))
---
>         if(world.getBlockId(i, j, k + 1) == blockID && world.isBlockSolidOnSide(i, j + 1, k + 1,0))
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/BlockDoor.java ../src_work/minecraft/net/minecraft/src/BlockDoor.java
181c181
<             if(!world.isBlockNormalCube(i, j - 1, k))
---
>             if(!world.isBlockSolidOnSide(i, j - 1, k,1))
244c244
<             return world.isBlockNormalCube(i, j - 1, k) && super.canPlaceBlockAt(world, i, j, k) && super.canPlaceBlockAt(world, i, j + 1, k);
---
>             return world.isBlockSolidOnSide(i, j - 1, k,1) && super.canPlaceBlockAt(world, i, j, k) && super.canPlaceBlockAt(world, i, j + 1, k);
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/BlockLadder.java ../src_work/minecraft/net/minecraft/src/BlockLadder.java
65a66,70
>     /* FORGE: Implemented base method, see Block.isLadder */
>     public boolean isLadder() {
> 	return true;
>     }
> 
83c88
<         if(world.isBlockNormalCube(i - 1, j, k))
---
>         if(world.isBlockSolidOnSide(i - 1, j, k,5))
87c92
<         if(world.isBlockNormalCube(i + 1, j, k))
---
>         if(world.isBlockSolidOnSide(i + 1, j, k,4))
91c96
<         if(world.isBlockNormalCube(i, j, k - 1))
---
>         if(world.isBlockSolidOnSide(i, j, k - 1,3))
95c100
<         return world.isBlockNormalCube(i, j, k + 1);
---
>         return world.isBlockSolidOnSide(i, j, k + 1,2);
101c106
<         if((i1 == 0 || l == 2) && world.isBlockNormalCube(i, j, k + 1))
---
>         if((i1 == 0 || l == 2) && world.isBlockSolidOnSide(i, j, k + 1,2))
105c110
<         if((i1 == 0 || l == 3) && world.isBlockNormalCube(i, j, k - 1))
---
>         if((i1 == 0 || l == 3) && world.isBlockSolidOnSide(i, j, k - 1,3))
109c114
<         if((i1 == 0 || l == 4) && world.isBlockNormalCube(i + 1, j, k))
---
>         if((i1 == 0 || l == 4) && world.isBlockSolidOnSide(i + 1, j, k,4))
113c118
<         if((i1 == 0 || l == 5) && world.isBlockNormalCube(i - 1, j, k))
---
>         if((i1 == 0 || l == 5) && world.isBlockSolidOnSide(i - 1, j, k,5))
124c129
<         if(i1 == 2 && world.isBlockNormalCube(i, j, k + 1))
---
>         if(i1 == 2 && world.isBlockSolidOnSide(i, j, k + 1,2))
128c133
<         if(i1 == 3 && world.isBlockNormalCube(i, j, k - 1))
---
>         if(i1 == 3 && world.isBlockSolidOnSide(i, j, k - 1,3))
132c137
<         if(i1 == 4 && world.isBlockNormalCube(i + 1, j, k))
---
>         if(i1 == 4 && world.isBlockSolidOnSide(i + 1, j, k,4))
136c141
<         if(i1 == 5 && world.isBlockNormalCube(i - 1, j, k))
---
>         if(i1 == 5 && world.isBlockSolidOnSide(i - 1, j, k,5))
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/BlockLeaves.java ../src_work/minecraft/net/minecraft/src/BlockLeaves.java
16a17,18
> 	
> 	
249c251
< }
---
> }
\ No newline at end of file
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/BlockLever.java ../src_work/minecraft/net/minecraft/src/BlockLever.java
43c43
<         if(l == 1 && world.isBlockNormalCube(i, j - 1, k))
---
>         if(l == 1 && world.isBlockSolidOnSide(i, j - 1, k,1))
47c47
<         if(l == 2 && world.isBlockNormalCube(i, j, k + 1))
---
>         if(l == 2 && world.isBlockSolidOnSide(i, j, k + 1,2))
51c51
<         if(l == 3 && world.isBlockNormalCube(i, j, k - 1))
---
>         if(l == 3 && world.isBlockSolidOnSide(i, j, k - 1,3))
55c55
<         if(l == 4 && world.isBlockNormalCube(i + 1, j, k))
---
>         if(l == 4 && world.isBlockSolidOnSide(i + 1, j, k,4))
59c59
<         return l == 5 && world.isBlockNormalCube(i - 1, j, k);
---
>         return l == 5 && world.isBlockSolidOnSide(i - 1, j, k,5);
64c64
<         if(world.isBlockNormalCube(i - 1, j, k))
---
>         if(world.isBlockSolidOnSide(i - 1, j, k,5))
68c68
<         if(world.isBlockNormalCube(i + 1, j, k))
---
>         if(world.isBlockSolidOnSide(i + 1, j, k,4))
72c72
<         if(world.isBlockNormalCube(i, j, k - 1))
---
>         if(world.isBlockSolidOnSide(i, j, k - 1,3))
76c76
<         if(world.isBlockNormalCube(i, j, k + 1))
---
>         if(world.isBlockSolidOnSide(i, j, k + 1,2))
80c80
<         return world.isBlockNormalCube(i, j - 1, k);
---
>         return world.isBlockSolidOnSide(i, j - 1, k,1);
89c89
<         if(l == 1 && world.isBlockNormalCube(i, j - 1, k))
---
>         if(l == 1 && world.isBlockSolidOnSide(i, j - 1, k,1))
93c93
<         if(l == 2 && world.isBlockNormalCube(i, j, k + 1))
---
>         if(l == 2 && world.isBlockSolidOnSide(i, j, k + 1,2))
97c97
<         if(l == 3 && world.isBlockNormalCube(i, j, k - 1))
---
>         if(l == 3 && world.isBlockSolidOnSide(i, j, k - 1,3))
101c101
<         if(l == 4 && world.isBlockNormalCube(i + 1, j, k))
---
>         if(l == 4 && world.isBlockSolidOnSide(i + 1, j, k,4))
105c105
<         if(l == 5 && world.isBlockNormalCube(i - 1, j, k))
---
>         if(l == 5 && world.isBlockSolidOnSide(i - 1, j, k,5))
127c127
<             if(!world.isBlockNormalCube(i - 1, j, k) && i1 == 1)
---
>             if(!world.isBlockSolidOnSide(i - 1, j, k,5) && i1 == 1)
131c131
<             if(!world.isBlockNormalCube(i + 1, j, k) && i1 == 2)
---
>             if(!world.isBlockSolidOnSide(i + 1, j, k,4) && i1 == 2)
135c135
<             if(!world.isBlockNormalCube(i, j, k - 1) && i1 == 3)
---
>             if(!world.isBlockSolidOnSide(i, j, k - 1,3) && i1 == 3)
139c139
<             if(!world.isBlockNormalCube(i, j, k + 1) && i1 == 4)
---
>             if(!world.isBlockSolidOnSide(i, j, k + 1,2) && i1 == 4)
143c143
<             if(!world.isBlockNormalCube(i, j - 1, k) && i1 == 5)
---
>             if(!world.isBlockSolidOnSide(i, j - 1, k,1) && i1 == 5)
147c147
<             if(!world.isBlockNormalCube(i, j - 1, k) && i1 == 6)
---
>             if(!world.isBlockSolidOnSide(i, j - 1, k,1) && i1 == 6)
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/BlockPressurePlate.java ../src_work/minecraft/net/minecraft/src/BlockPressurePlate.java
49c49
<         return world.isBlockNormalCube(i, j - 1, k);
---
>         return world.isBlockSolidOnSide(i, j - 1, k,1);
59c59
<         if(!world.isBlockNormalCube(i, j - 1, k))
---
>         if(!world.isBlockSolidOnSide(i, j - 1, k,1))
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/BlockRail.java ../src_work/minecraft/net/minecraft/src/BlockRail.java
19c19
<         return l == Block.rail.blockID || l == Block.railPowered.blockID || l == Block.railDetector.blockID;
---
> 	return Block.blocksList[l] instanceof BlockRail;
24c24
<         return i == Block.rail.blockID || i == Block.railPowered.blockID || i == Block.railDetector.blockID;
---
> 	return Block.blocksList[i] instanceof BlockRail;
100c100
<         return world.isBlockNormalCube(i, j - 1, k);
---
>         return world.isBlockSolidOnSide(i, j - 1, k,1);
124c124
<         if(!world.isBlockNormalCube(i, j - 1, k))
---
>         if(!world.isBlockSolidOnSide(i, j - 1, k,1))
128c128
<         if(j1 == 2 && !world.isBlockNormalCube(i + 1, j, k))
---
>         if(j1 == 2 && !world.isBlockSolidOnSide(i + 1, j, k,1))
132c132
<         if(j1 == 3 && !world.isBlockNormalCube(i - 1, j, k))
---
>         if(j1 == 3 && !world.isBlockSolidOnSide(i - 1, j, k,1))
136c136
<         if(j1 == 4 && !world.isBlockNormalCube(i, j, k - 1))
---
>         if(j1 == 4 && !world.isBlockSolidOnSide(i, j, k - 1,1))
140c140
<         if(j1 == 5 && !world.isBlockNormalCube(i, j, k + 1))
---
>         if(j1 == 5 && !world.isBlockSolidOnSide(i, j, k + 1,1))
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/BlockRedstoneRepeater.java ../src_work/minecraft/net/minecraft/src/BlockRedstoneRepeater.java
30c30
<         if(!world.isBlockNormalCube(i, j - 1, k))
---
>         if(!world.isBlockSolidOnSide(i, j - 1, k,1))
41c41
<         if(!world.isBlockNormalCube(i, j - 1, k))
---
>         if(!world.isBlockSolidOnSide(i, j - 1, k,1))
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/BlockRedstoneWire.java ../src_work/minecraft/net/minecraft/src/BlockRedstoneWire.java
5a6
> import net.minecraft.src.forge.*;
56c57
<         return world.isBlockNormalCube(i, j - 1, k);
---
>         return world.isBlockSolidOnSide(i, j - 1, k, 1);
452a454,457
>         }
>         if (Block.blocksList[i1] instanceof IConnectRedstone) {
>             IConnectRedstone icr = (IConnectRedstone) Block.blocksList[i1];
>             return icr.canConnectRedstone(iblockaccess, i, j, k, l);
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/BlockTallGrass.java ../src_work/minecraft/net/minecraft/src/BlockTallGrass.java
6a7
> import java.util.ArrayList;
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/BlockTorch.java ../src_work/minecraft/net/minecraft/src/BlockTorch.java
44c44
<         return world.isBlockNormalCube(i, j, k) || world.getBlockId(i, j, k) == Block.fence.blockID;
---
>         return world.isBlockSolidOnSide(i, j, k,1) || world.getBlockId(i, j, k) == Block.fence.blockID;
49c49
<         if(world.isBlockNormalCube(i - 1, j, k))
---
>         if(world.isBlockSolidOnSide(i - 1, j, k,5))
53c53
<         if(world.isBlockNormalCube(i + 1, j, k))
---
>         if(world.isBlockSolidOnSide(i + 1, j, k,4))
57c57
<         if(world.isBlockNormalCube(i, j, k - 1))
---
>         if(world.isBlockSolidOnSide(i, j, k - 1,3))
61c61
<         if(world.isBlockNormalCube(i, j, k + 1))
---
>         if(world.isBlockSolidOnSide(i, j, k + 1,2))
75c75
<         if(l == 2 && world.isBlockNormalCube(i, j, k + 1))
---
>         if(l == 2 && world.isBlockSolidOnSide(i, j, k + 1,2))
79c79
<         if(l == 3 && world.isBlockNormalCube(i, j, k - 1))
---
>         if(l == 3 && world.isBlockSolidOnSide(i, j, k - 1,3))
83c83
<         if(l == 4 && world.isBlockNormalCube(i + 1, j, k))
---
>         if(l == 4 && world.isBlockSolidOnSide(i + 1, j, k,4))
87c87
<         if(l == 5 && world.isBlockNormalCube(i - 1, j, k))
---
>         if(l == 5 && world.isBlockSolidOnSide(i - 1, j, k,5))
105c105
<         if(world.isBlockNormalCube(i - 1, j, k))
---
>         if(world.isBlockSolidOnSide(i - 1, j, k,5))
109c109
<         if(world.isBlockNormalCube(i + 1, j, k))
---
>         if(world.isBlockSolidOnSide(i + 1, j, k,4))
113c113
<         if(world.isBlockNormalCube(i, j, k - 1))
---
>         if(world.isBlockSolidOnSide(i, j, k - 1,3))
117c117
<         if(world.isBlockNormalCube(i, j, k + 1))
---
>         if(world.isBlockSolidOnSide(i, j, k + 1,2))
134c134
<             if(!world.isBlockNormalCube(i - 1, j, k) && i1 == 1)
---
>             if(!world.isBlockSolidOnSide(i - 1, j, k,5) && i1 == 1)
138c138
<             if(!world.isBlockNormalCube(i + 1, j, k) && i1 == 2)
---
>             if(!world.isBlockSolidOnSide(i + 1, j, k,4) && i1 == 2)
142c142
<             if(!world.isBlockNormalCube(i, j, k - 1) && i1 == 3)
---
>             if(!world.isBlockSolidOnSide(i, j, k - 1,3) && i1 == 3)
146c146
<             if(!world.isBlockNormalCube(i, j, k + 1) && i1 == 4)
---
>             if(!world.isBlockSolidOnSide(i, j, k + 1,2) && i1 == 4)
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/BlockTrapDoor.java ../src_work/minecraft/net/minecraft/src/BlockTrapDoor.java
150c150
<         if(!world.isBlockNormalCube(j1, j, k1))
---
>         if(!disableValidation && !world.isBlockSolidOnSide(j1, j, k1, (i1&3)+2))
216c216
<         return world.isBlockNormalCube(i, j, k);
---
>         return world.isBlockSolidOnSide(i, j, k, l);
222a223,226
> 
>     /* FORGE: Set this to allow trapdoors to remain free-floating
>      */
>     public static boolean disableValidation=false;
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/BlockWeb.java ../src_work/minecraft/net/minecraft/src/BlockWeb.java
6a7
> import java.util.ArrayList;
50c51
< }
---
> }
\ No newline at end of file
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/Chunk.java ../src_work/minecraft/net/minecraft/src/Chunk.java
5a6
> import net.minecraft.src.forge.*;
251a253,259
> 
>         if (Block.blocksList[k1] instanceof IOverrideReplace) {
>             IOverrideReplace iovr = (IOverrideReplace) Block.blocksList[k1];
>             if (!iovr.canReplaceBlock(worldObj, l1, j, i2, l))
>                 return iovr.getReplacedSuccess();
>         }
> 
294a303,309
> 
>         if (Block.blocksList[j1] instanceof IOverrideReplace) {
>             IOverrideReplace iovr = (IOverrideReplace) Block.blocksList[j1];
>             if (!iovr.canReplaceBlock(worldObj, k1, j, l1, l))
>                 return iovr.getReplacedSuccess();
>         }
> 
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/EffectRenderer.java ../src_work/minecraft/net/minecraft/src/EffectRenderer.java
9a10,12
> import net.minecraft.src.forge.BlockTextureParticles;
> import net.minecraft.src.forge.ITextureProvider;
> 
18a22
>         effectList = new ArrayList();
57a62,73
>         for (int x = 0; x < effectList.size(); x++) {
>             BlockTextureParticles entry = (BlockTextureParticles) effectList
>                     .get(x);
>             for (int y = 0; y < entry.effects.size(); y++) {
>                 EntityFX entityfx = (EntityFX) entry.effects.get(y);
>                 if (entityfx.isDead) {
>                     entry.effects.remove(y--);
>                 }
>             }
>             if (effectList.size() == 0)
>                 effectList.remove(x--);
>         }
95a112
> 				if(entityfx instanceof EntityDiggingFX) continue;
100a118,131
>         Tessellator tessellator = Tessellator.instance;
> 
>         for (int x = 0; x < effectList.size(); x++) {
>             BlockTextureParticles entry = (BlockTextureParticles) effectList
>                     .get(x);
>             GL11.glBindTexture(3553 /* GL_TEXTURE_2D */,
>                     renderer.getTexture(entry.texture));
>             tessellator.startDrawingQuads();
>             for (int y = 0; y < entry.effects.size(); y++) {
>                 EntityFX entityfx = (EntityFX) entry.effects.get(y);
>                 entityfx.renderParticle(tessellator, f, f1, f5, f2, f3, f4);
>             }
>             tessellator.draw();
>         }
126a158,164
> 		
>         for (int x = 0; x < effectList.size(); x++) {
>             BlockTextureParticles entry = (BlockTextureParticles) effectList
>                     .get(x);
>             entry.effects.clear();
>         }
>         effectList.clear();
148c186,191
<                     addEffect((new EntityDiggingFX(worldObj, d, d1, d2, d - (double)i - 0.5D, d1 - (double)j - 0.5D, d2 - (double)k - 0.5D, block, j2, i1)).func_4041_a(i, j, k));
---
>                     EntityDiggingFX dig_effect = new EntityDiggingFX(worldObj,
>                             d, d1, d2, d - (double) i - 0.5D, d1 - (double) j
>                                     - 0.5D, d2 - (double) k - 0.5D, block, j2,
>                             i1);
>                     dig_effect.func_4041_a(i, j, k);
>                     addDigParticleEffect(dig_effect, block);
193c236,241
<         addEffect((new EntityDiggingFX(worldObj, d, d1, d2, 0.0D, 0.0D, 0.0D, block, l, worldObj.getBlockMetadata(i, j, k))).func_4041_a(i, j, k).func_407_b(0.2F).func_405_d(0.6F));
---
>         EntityDiggingFX dig_effect = new EntityDiggingFX(worldObj, d, d1, d2,
>                 0.0D, 0.0D, 0.0D, block, l, worldObj.getBlockMetadata(i, j, k));
>         dig_effect.func_4041_a(i, j, k);
>         dig_effect.func_407_b(0.2F);
>         dig_effect.func_405_d(0.6F);
>         addDigParticleEffect(dig_effect, block);
199a248,273
> 	
>     public void addDigParticleEffect(EntityDiggingFX dig_effect, Block block) {
>         boolean added = false;
>         String comp;
> 
>         if (block instanceof ITextureProvider) {
>             comp = ((ITextureProvider) block).getTextureFile();
>         } else {
>             comp = "/terrain.png";
>         }
>         for (int x = 0; x < effectList.size(); x++) {
>             BlockTextureParticles entry = (BlockTextureParticles) effectList
>                     .get(x);
>             if (entry.texture.equals(comp)) {
>                 entry.effects.add(dig_effect);
>                 added = true;
>             }
>         }
>         if (!added) {
>             BlockTextureParticles entry = new BlockTextureParticles();
>             entry.texture = comp;
>             entry.effects.add(dig_effect);
>             effectList.add(entry);
>         }
>         addEffect(dig_effect);
>     }
202a277
>     private List effectList;
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/EntityLiving.java ../src_work/minecraft/net/minecraft/src/EntityLiving.java
558c558,560
<         return worldObj.getBlockId(i, j, k) == Block.ladder.blockID;
---
> 	Block block=Block.blocksList[worldObj.getBlockId(i,j,k)];
> 	if(block==null) return false;
> 	return block.isLadder();
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/EntityPlayer.java ../src_work/minecraft/net/minecraft/src/EntityPlayer.java
8a9,12
> import net.minecraft.src.forge.ArmorProperties;
> import net.minecraft.src.forge.ISpecialArmor;
> import net.minecraft.src.forge.ForgeHooks;
> 
318a323,324
>     /* FORGE: This isn't called anymore
>      */
332a339,356
>     /* FORGE: Extended to allow metadata.
>      */
>     public float getCurrentPlayerStrVsBlock(Block block, int md)
>     {
>         float f = 1.0F;
> 	ItemStack ist=inventory.getCurrentItem();
> 	if(ist!=null) f=ist.getItem().getStrVsBlock(ist,block,md);
>         if(isInsideOfMaterial(Material.water))
>         {
>             f /= 5F;
>         }
>         if(!onGround)
>         {
>             f /= 5F;
>         }
>         return f;
>     }
> 
479a504,522
>     	 boolean doRegularComputation = true;
>          int initialDamage = i;
>          
>          for (ItemStack stack : inventory.armorInventory) {
>              if (stack != null && stack.getItem() instanceof ISpecialArmor) {
>                  ISpecialArmor armor = (ISpecialArmor) stack.getItem();
>                  
>                  ArmorProperties props = armor.getProperties(this, initialDamage, i);                            
>                  i = i - props.damageRemove;
>                  doRegularComputation = doRegularComputation
>                          && props.allowRegularComputation;
>              }
>          }
>          
>          if (!doRegularComputation) {
>              super.damageEntity(i);
>              return;
>          }
>         
524a568
> 	ItemStack orig=inventory.getCurrentItem();
525a570
> 	ForgeHooks.onDestroyCurrentItem(this,orig);
596a642,645
> 	EnumStatus customSleep = ForgeHooks.sleepInBedAt(this, i, j, k);
> 	if (customSleep != null) {
> 	    return customSleep;
> 	}
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/EntityRenderer.java ../src_work/minecraft/net/minecraft/src/EntityRenderer.java
5a6,7
> import net.minecraft.src.forge.ForgeHooksClient;
> import net.minecraft.src.reforged.Reforged;
109c111,113
<             if(d1 > 3D)
---
>             float f1 = Reforged.reachGetEntityPlayer(mc.thePlayer);
>             //changed from > to <. Keep an eye out for bugs. This is done for custom entity reach
>             if(d1 <= (double)f1)
111c115
<                 d1 = 3D;
---
>                 d1 = f1;
118,119c122,123
<         float f1 = 1.0F;
<         List list = mc.theWorld.getEntitiesWithinAABBExcludingEntity(mc.renderViewEntity, mc.renderViewEntity.boundingBox.addCoord(vec3d1.xCoord * d, vec3d1.yCoord * d, vec3d1.zCoord * d).expand(f1, f1, f1));
---
>         float f2 = 1.0F;
>         List list = mc.theWorld.getEntitiesWithinAABBExcludingEntity(mc.renderViewEntity, mc.renderViewEntity.boundingBox.addCoord(vec3d1.xCoord * d, vec3d1.yCoord * d, vec3d1.zCoord * d).expand(f2, f2, f2));
124c128
<             if(!entity.canBeCollidedWith())
---
>             if(entity.canBeCollidedWith())
126,133c130,141
<                 continue;
<             }
<             float f2 = entity.getCollisionBorderSize();
<             AxisAlignedBB axisalignedbb = entity.boundingBox.expand(f2, f2, f2);
<             MovingObjectPosition movingobjectposition = axisalignedbb.func_1169_a(vec3d, vec3d2);
<             if(axisalignedbb.isVecInside(vec3d))
<             {
<                 if(0.0D < d2 || d2 == 0.0D)
---
>                 float f3 = entity.getCollisionBorderSize();
>                 AxisAlignedBB axisalignedbb = entity.boundingBox.expand(f3, f3, f3);
>                 MovingObjectPosition movingobjectposition = axisalignedbb.func_1169_a(vec3d, vec3d2);
>                 if(axisalignedbb.isVecInside(vec3d))
>                 {
>                     if(0.0D < d2 || d2 == 0.0D)
>                     {
>                         pointedEntity = entity;
>                         d2 = 0.0D;
>                     }
>                 } else
>                 if(movingobjectposition != null)
135,136c143,148
<                     pointedEntity = entity;
<                     d2 = 0.0D;
---
>                     double d3 = vec3d.distanceTo(movingobjectposition.hitVec);
>                     if(d3 < d2 || d2 == 0.0D)
>                     {
>                         pointedEntity = entity;
>                         d2 = d3;
>                     }
138,148d149
<                 continue;
<             }
<             if(movingobjectposition == null)
<             {
<                 continue;
<             }
<             double d3 = vec3d.distanceTo(movingobjectposition.hitVec);
<             if(d3 < d2 || d2 == 0.0D)
<             {
<                 pointedEntity = entity;
<                 d2 = d3;
575a577,579
> 		if(!ForgeHooksClient.onBlockHighlight(renderglobal,entityplayer,
> 			mc.objectMouseOver,0,
> 			entityplayer.inventory.getCurrentItem(),f)) {
577a582
> 		}
621a627,629
> 		if(!ForgeHooksClient.onBlockHighlight(renderglobal,entityplayer1,
> 			mc.objectMouseOver,0,
> 			entityplayer1.inventory.getCurrentItem(),f)) {
623a632
> 		}
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/EntitySheep.java ../src_work/minecraft/net/minecraft/src/EntitySheep.java
6a7
> import java.util.ArrayList;
64d64
< 
68c68
<         return false;
---
>         return super.interact(entityplayer);
186c186
< }
---
> }
\ No newline at end of file
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/Explosion.java ../src_work/minecraft/net/minecraft/src/Explosion.java
5a6
> import net.minecraft.src.forge.ISpecialResistance;
68c69,79
<                             f1 -= (Block.blocksList[i5].getExplosionResistance(exploder) + 0.3F) * f2;
---
>                             if (Block.blocksList[i5] instanceof ISpecialResistance) {
>                                 ISpecialResistance isr = (ISpecialResistance) Block.blocksList[i5];
>                                 f1 -= (isr.getSpecialExplosionResistance(
>                                         worldObj, j4, k4, l4, explosionX,
>                                         explosionY, explosionZ, exploder) + 0.3F)
>                                         * f2;
>                             } else {
>                                 f1 -= (Block.blocksList[i5]
>                                         .getExplosionResistance(exploder) + 0.3F)
>                                         * f2;
>                             }
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/FurnaceRecipes.java ../src_work/minecraft/net/minecraft/src/FurnaceRecipes.java
6a7
> import java.util.Arrays;
15a17,22
> 	private static final FurnaceRecipes smeltingBase = new FurnaceRecipes();
>     
>     /** The list of smelting results. */
>     private Map smeltingList;
>     private Map metaSmeltingList;
> 	
23a31
>         metaSmeltingList = new HashMap();
35a44,46
>     /**
>      * Adds a smelting recipe.
>      */
40a52,56
>     /**
>      * Returns the smelting result of an item.
>      * Deprecated in favor of a metadata sensitive version
>      */
>     @Deprecated
51,53c67,96
<     private static final FurnaceRecipes smeltingBase = new FurnaceRecipes();
<     private Map smeltingList;
< 
---
>     /**
>      * Add a metadata-sensitive furnace recipe
>      * @param itemID The Item ID
>      * @param metadata The Item Metadata
>      * @param itemstack The ItemStack for the result
>      */
>     public void addSmelting(int itemID, int metadata, ItemStack itemstack)
>     {
>         metaSmeltingList.put(Arrays.asList(itemID, metadata), itemstack);
>     }
>     
>     /**
>      * Used to get the resulting ItemStack form a source ItemStack
>      * @param item The Source ItemStack
>      * @return The result ItemStack
>      */
>     public ItemStack getSmeltingResult(ItemStack item) 
>     {
>         if (item == null)
>         {
>             return null;
>         }
>         ItemStack ret = (ItemStack)metaSmeltingList.get(Arrays.asList(item.itemID, item.getItemDamage()));
>         if (ret != null) 
>         {
>             return ret;
>         }
>         return (ItemStack)smeltingList.get(Integer.valueOf(item.itemID));
>     }
>     
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/Item.java ../src_work/minecraft/net/minecraft/src/Item.java
77a78,84
>     /* FORGE: Metadata-sensitive version of getStrVsBlock
>      */
>     public float getStrVsBlock(ItemStack itemstack, Block block, int md)
>     {
> 	    return getStrVsBlock(itemstack,block);
>     }
> 
214a222,242
>     
>     /* =========================================================== FORGE START ===============================================================*/
> 
>     /**
>      * Called before a block is broken.  Return true to prevent default block harvesting.
>      *
>      * Note: In SMP, this is called on both client and server sides!
>      * 
>      * @param itemstack The current ItemStack
>      * @param X The X Position
>      * @param Y The X Position
>      * @param Z The X Position
>      * @param player The Player that is wielding the item
>      * @return True to prevent harvesting, false to continue as normal
>      */
>     public boolean onBlockStartBreak(ItemStack itemstack, int X, int Y, int Z, EntityPlayer player) 
>     {
>         return false;
>     }
> 
>     /* ===========================================================  FORGE END  ===============================================================*/
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/ItemBucket.java ../src_work/minecraft/net/minecraft/src/ItemBucket.java
8a9,10
> import net.minecraft.src.forge.MinecraftForge;
> 
57a60,66
>                 ItemStack customBucket = MinecraftForge.fillCustomBucket(world,
>                         i, j, k);
>             	
>                 if (customBucket != null) {
>                    return customBucket;
>                 }
> 
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/ItemRenderer.java ../src_work/minecraft/net/minecraft/src/ItemRenderer.java
7a8,9
> import net.minecraft.src.forge.ForgeHooksClient;
> 
36a39
>             ForgeHooksClient.overrideTexture (Block.blocksList[itemstack.itemID]);
42a46
>                 ForgeHooksClient.overrideTexture (Block.blocksList[itemstack.itemID]);
45a50
>                 ForgeHooksClient.overrideTexture (Item.itemsList[itemstack.itemID]);
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/ItemShears.java ../src_work/minecraft/net/minecraft/src/ItemShears.java
6a7,9
> import java.util.ArrayList;
> 
> import net.minecraft.src.forge.IShearable;
24c27
<         if(i == Block.leaves.blockID || i == Block.web.blockID)
---
>         if(i == Block.web.blockID || i == Block.leaves.blockID || Block.blocksList[i] instanceof IShearable)
50c53,113
< }
---
>     
>     @Override
>     public void saddleEntity(ItemStack itemstack, EntityLiving entity)
>     {
>         if (entity.worldObj.multiplayerWorld)
>         {
>             return;
>         }
>         if (entity instanceof IShearable)
>         {
>             IShearable target = (IShearable)entity;
>             if (target.isShearable(itemstack, entity.worldObj, (int)entity.posX, (int)entity.posY, (int)entity.posZ))
>             {
>                 ArrayList<ItemStack> drops = target.onSheared(itemstack, entity.worldObj, (int)entity.posX, (int)entity.posY, (int)entity.posZ);
>                 for(ItemStack stack : drops)
>                 {
>                     EntityItem ent = entity.entityDropItem(stack, 1.0F);
>                     ent.motionY += entity.rand.nextFloat() * 0.05F;
>                     ent.motionX += (entity.rand.nextFloat() - entity.rand.nextFloat()) * 0.1F;
>                     ent.motionZ += (entity.rand.nextFloat() - entity.rand.nextFloat()) * 0.1F;
>                 }
>                 itemstack.damageItem(1, entity);
>             }
>         }
>     }
>     
>     @Override
>      public boolean onBlockStartBreak(ItemStack itemstack, int X, int Y, int Z, EntityPlayer player) 
>      {
>     	
>         if (player.worldObj.multiplayerWorld)
>         {
>             return false;
>         }
>         
>         int id = player.worldObj.getBlockId(X, Y, Z);
>         
>         if ((Block.blocksList[id] != null && Block.blocksList[id] instanceof IShearable))
>         {
>             IShearable target = (IShearable)Block.blocksList[id];
>             if (target.isShearable(itemstack, player.worldObj, X, Y, Z))
>             {
>                 ArrayList<ItemStack> drops = target.onSheared(itemstack, player.worldObj, X, Y, Z);
>                 for(ItemStack stack : drops)
>                 {
>                     float f = 0.7F;
>                     double d  = (double)(player.rand.nextFloat() * f) + (double)(1.0F - f) * 0.5D;
>                     double d1 = (double)(player.rand.nextFloat() * f) + (double)(1.0F - f) * 0.5D;
>                     double d2 = (double)(player.rand.nextFloat() * f) + (double)(1.0F - f) * 0.5D;
>                     EntityItem entityitem = new EntityItem(player.worldObj, (double)X + d, (double)Y + d1, (double)Z + d2, stack);
>                     entityitem.delayBeforeCanPickup = 10;
>                     player.worldObj.entityJoinedWorld(entityitem);
>                 }
>                 itemstack.damageItem(1, player);
>                 player.addStat(StatList.mineBlockStatArray[id], 1);
>             }
>         }
>         return false;
>      }
>     
> }
\ No newline at end of file
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/ItemTool.java ../src_work/minecraft/net/minecraft/src/ItemTool.java
6a7,8
> import java.util.Arrays;
> import net.minecraft.src.forge.ForgeHooks;
39a42,49
>     /* FORGE: Overridden to allow custom tool effectiveness
>      */
>     public float getStrVsBlock(ItemStack itemstack, Block block, int md) {
> 	    if(ForgeHooks.isToolEffective(itemstack,block,md))
>                 return efficiencyOnProperMaterial;
> 	    return getStrVsBlock(itemstack,block);
>     }
> 
63,64c73,74
<     private float efficiencyOnProperMaterial;
<     private int damageVsEntity;
---
>     public float efficiencyOnProperMaterial;
>     public int damageVsEntity;
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/MovingObjectPosition.java ../src_work/minecraft/net/minecraft/src/MovingObjectPosition.java
37a38,40
> 
>     // Added for RedPower subblocks.
>     public int subHit=-1;
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/PlayerController.java ../src_work/minecraft/net/minecraft/src/PlayerController.java
5a6
> import net.minecraft.src.forge.*;
73a75
> 		ForgeHooks.onDestroyCurrentItem(entityplayer,itemstack1);
100a103,108
>         if (itemstack != null && itemstack.getItem() instanceof IUseItemFirst) {
>             IUseItemFirst iuif = (IUseItemFirst) itemstack.getItem();
>             if (iuif.onItemUseFirst(itemstack, entityplayer, world, i, j, k, l)) {
>                 return true;
>             }
>         }
111c119,123
<             return itemstack.useItem(entityplayer, world, i, j, k, l);
---
>             if(!itemstack.useItem(entityplayer, world, i, j, k, l))
> 		    return false;
>             if(itemstack.stackSize == 0)
> 		ForgeHooks.onDestroyCurrentItem(entityplayer,itemstack);
> 	    return true;
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/PlayerControllerMP.java ../src_work/minecraft/net/minecraft/src/PlayerControllerMP.java
40a41,46
>     	ItemStack itemstack = mc.thePlayer.getCurrentEquippedItem();
>     	
>     	if (itemstack != null && itemstack.getItem().onBlockStartBreak(itemstack, i, j, k, mc.thePlayer)) {
>     		return false;
>     	}
>     	
43d48
<         ItemStack itemstack = mc.thePlayer.getCurrentEquippedItem();
66c71
<             if(i1 > 0 && Block.blocksList[i1].blockStrength(mc.thePlayer) >= 1.0F)
---
>             if(i1 > 0 && Block.blocksList[i1].blockStrength(mc.theWorld,mc.thePlayer,i,j,k) >= 1.0F)
109c114
<             curBlockDamageMP += block.blockStrength(mc.thePlayer);
---
>             curBlockDamageMP += block.blockStrength(mc.theWorld,mc.thePlayer,i,j,k);
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/PlayerControllerSP.java ../src_work/minecraft/net/minecraft/src/PlayerControllerSP.java
35a36,41
>     	ItemStack itemstack = mc.thePlayer.getCurrentEquippedItem();
>     	
>     	if (itemstack != null && itemstack.getItem().onBlockStartBreak(itemstack, i, j, k, mc.thePlayer)) {
>     		return false;
>     	}
>     	
39,41c45,46
<         ItemStack itemstack = mc.thePlayer.getCurrentEquippedItem();
<         boolean flag1 = mc.thePlayer.canHarvestBlock(Block.blocksList[i1]);
<         if(itemstack != null)
---
>         boolean flag1 = Block.blocksList[i1].canHarvestBlock(mc.thePlayer,j1);
>         if(itemstack != null && itemstack.getItem().onBlockStartBreak(itemstack, i, j, k, mc.thePlayer))
65c70
<         if(i1 > 0 && Block.blocksList[i1].blockStrength(mc.thePlayer) >= 1.0F)
---
>         if(i1 > 0 && Block.blocksList[i1].blockStrength(mc.theWorld,mc.thePlayer,i,j,k) >= 1.0F)
92c97
<             curBlockDamage += block.blockStrength(mc.thePlayer);
---
>             curBlockDamage += block.blockStrength(mc.theWorld,mc.thePlayer,i,j,k);
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/RenderBlocks.java ../src_work/minecraft/net/minecraft/src/RenderBlocks.java
2174c2174
<             if(cfgGrassFix && i1 == 3 && overrideBlockTexture < 0)
---
>             if(Tessellator.instance.defaultTexture && cfgGrassFix && i1 == 3 && overrideBlockTexture < 0)
2259c2259
<             if(cfgGrassFix && j1 == 3 && overrideBlockTexture < 0)
---
>             if(Tessellator.instance.defaultTexture && cfgGrassFix && j1 == 3 && overrideBlockTexture < 0)
2344c2344
<             if(cfgGrassFix && k1 == 3 && overrideBlockTexture < 0)
---
>             if(Tessellator.instance.defaultTexture && cfgGrassFix && k1 == 3 && overrideBlockTexture < 0)
2429c2429
<             if(cfgGrassFix && l1 == 3 && overrideBlockTexture < 0)
---
>             if(Tessellator.instance.defaultTexture && cfgGrassFix && l1 == 3 && overrideBlockTexture < 0)
2513c2513
<             if(cfgGrassFix && l == 3 && overrideBlockTexture < 0)
---
>             if(Tessellator.instance.defaultTexture && cfgGrassFix && l == 3 && overrideBlockTexture < 0)
2530c2530
<             if(cfgGrassFix && i1 == 3 && overrideBlockTexture < 0)
---
>             if(Tessellator.instance.defaultTexture && cfgGrassFix && i1 == 3 && overrideBlockTexture < 0)
2547c2547
<             if(cfgGrassFix && j1 == 3 && overrideBlockTexture < 0)
---
>             if(Tessellator.instance.defaultTexture && cfgGrassFix && j1 == 3 && overrideBlockTexture < 0)
2564c2564
<             if(cfgGrassFix && k1 == 3 && overrideBlockTexture < 0)
---
>             if(Tessellator.instance.defaultTexture && cfgGrassFix && k1 == 3 && overrideBlockTexture < 0)
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/RenderEngine.java ../src_work/minecraft/net/minecraft/src/RenderEngine.java
128a129,131
> 	    if(Tessellator.renderingWorldRenderer) {
> 		System.out.printf("Warning: Texture %s not preloaded, will cause render glitches!\n",s);
> 	    }
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/RenderGlobal.java ../src_work/minecraft/net/minecraft/src/RenderGlobal.java
1561,1562c1561,1562
<     private World worldObj;
<     private RenderEngine renderEngine;
---
>     public World worldObj;
>     public RenderEngine renderEngine;
1570,1571c1570,1571
<     private Minecraft mc;
<     private RenderBlocks globalRenderBlocks;
---
>     public Minecraft mc;
>     public RenderBlocks globalRenderBlocks;
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/RenderItem.java ../src_work/minecraft/net/minecraft/src/RenderItem.java
7a8,10
> 
> import net.minecraft.src.forge.ForgeHooksClient;
> 
53a57
>             ForgeHooksClient.overrideTexture(Block.blocksList[itemstack.itemID]);
80a85
>                 ForgeHooksClient.overrideTexture(Block.blocksList[itemstack.itemID]);
84c89,90
<             }
---
>                 ForgeHooksClient.overrideTexture(Item.itemsList[itemstack.itemID]);
>             }            
94a101
>             	
133a141
>             ForgeHooksClient.overrideTexture (Block.blocksList[i]);
161a170
>                 ForgeHooksClient.overrideTexture (Block.blocksList[i]);
164a174
>                 ForgeHooksClient.overrideTexture(Item.itemsList[i]);
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/RenderPlayer.java ../src_work/minecraft/net/minecraft/src/RenderPlayer.java
6a7
> import net.minecraft.src.forge.IArmorTextureProvider;
37c38,45
<                 loadTexture((new StringBuilder()).append("/armor/").append(armorFilenamePrefix[itemarmor.renderIndex]).append("_").append(i != 2 ? 1 : 2).append(".png").toString());
---
>                 if ( item instanceof IArmorTextureProvider )
>                 {
>                 	loadTexture( ((IArmorTextureProvider)item).getArmorTextureFile() ); 
>                 }
>                 else
>                 {
>                 	loadTexture((new StringBuilder()).append("/armor/").append(armorFilenamePrefix[itemarmor.renderIndex]).append("_").append(i != 2 ? 1 : 2).append(".png").toString());
>                 }                
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/SlotCrafting.java ../src_work/minecraft/net/minecraft/src/SlotCrafting.java
5a6
> import net.minecraft.src.forge.ForgeHooks;
62a64
> 	ForgeHooks.onTakenFromCrafting(thePlayer, itemstack, craftMatrix);
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/Tessellator.java ../src_work/minecraft/net/minecraft/src/Tessellator.java
8a9
> import java.util.*;
16,18c17
< 
<     private Tessellator(int i)
<     {
---
>     public Tessellator() {
27d25
<         useVBO = false;
29,40c27,29
<         vboCount = 10;
<         bufferSize = i;
<         byteBuffer = GLAllocation.createDirectByteBuffer(i * 4);
<         intBuffer = byteBuffer.asIntBuffer();
<         floatBuffer = byteBuffer.asFloatBuffer();
<         rawBuffer = new int[i];
<         useVBO = tryVBO && GLContext.getCapabilities().GL_ARB_vertex_buffer_object;
<         if(useVBO)
<         {
<             vertexBuffers = GLAllocation.createDirectIntBuffer(vboCount);
<             ARBVertexBufferObject.glGenBuffersARB(vertexBuffers);
<         }
---
> 
> 	rawBuffer=null;
> 	rawBufferSize=0;
50,51c39,47
<         if(vertexCount > 0)
<         {
---
> 	int offs=0;
>         while(offs < vertexCount) {
> 	    int vtc;
>             if(drawMode == 7 && convertQuadsToTriangles) {
> 		    vtc=Math.min(vertexCount-offs,trivertsInBuffer);
>             } else {
> 		    vtc=Math.min(vertexCount-offs,nativeBufferSize>>5);
>             }
> 
53c49
<             intBuffer.put(rawBuffer, 0, rawBufferIndex);
---
>             intBuffer.put(rawBuffer, offs*8, vtc*8);
55c51,52
<             byteBuffer.limit(rawBufferIndex * 4);
---
>             byteBuffer.limit(vtc*32);
> 	    offs+=vtc;
109c106
<                 GL11.glDrawArrays(4, 0, vertexCount);
---
>                 GL11.glDrawArrays(4, 0, vtc);
112c109
<                 GL11.glDrawArrays(drawMode, 0, vertexCount);
---
>                 GL11.glDrawArrays(drawMode, 0, vtc);
127a125,128
> 	if(rawBufferSize>0x20000 && rawBufferIndex<(rawBufferSize<<3)) {
> 		rawBufferSize=0;
> 		rawBuffer=null;
> 	}
239a241,249
> 	if(rawBufferIndex >= rawBufferSize-32) {
> 		if(rawBufferSize==0) {
> 			rawBufferSize=0x10000;
> 			rawBuffer=new int[rawBufferSize];
> 		} else {
> 			rawBufferSize*=2;
> 			rawBuffer=Arrays.copyOf(rawBuffer,rawBufferSize);
> 		}
> 	}
281,285d290
<         if(vertexCount % 4 == 0 && rawBufferIndex >= bufferSize - 32)
<         {
<             draw();
<             isDrawing = true;
<         }
338,340c343
<     private ByteBuffer byteBuffer;
<     private IntBuffer intBuffer;
<     private FloatBuffer floatBuffer;
---
>     private static boolean useVBO = false;
353,355c356,358
<     private double xOffset;
<     private double yOffset;
<     private double zOffset;
---
>     public double xOffset;
>     public double yOffset;
>     public double zOffset;
357d359
<     public static final Tessellator instance = new Tessellator(0x200000);
359,360d360
<     private boolean useVBO;
<     private IntBuffer vertexBuffers;
362,363c362,393
<     private int vboCount;
<     private int bufferSize;
---
> 
>     public static boolean renderingWorldRenderer=false;
>     public boolean defaultTexture=false;
>     private int rawBufferSize;
>     private static int vboCount;
>     private static IntBuffer vertexBuffers;
>     private static int nativeBufferSize;
>     private static int trivertsInBuffer;
>     private static ByteBuffer byteBuffer;
>     private static IntBuffer intBuffer;
>     private static FloatBuffer floatBuffer;
>     public static Tessellator instance;
>     public static Tessellator firstInstance;
> 
>     static {
> 	instance=new Tessellator();
>     	firstInstance=instance;
> 	firstInstance.defaultTexture=true;
> 
>         nativeBufferSize = 0x200000;
> 	trivertsInBuffer = (nativeBufferSize/48)*6;
>         byteBuffer = GLAllocation.createDirectByteBuffer(nativeBufferSize * 4);
>         intBuffer = byteBuffer.asIntBuffer();
>         floatBuffer = byteBuffer.asFloatBuffer();
>         useVBO = tryVBO && GLContext.getCapabilities().GL_ARB_vertex_buffer_object;
>         vboCount = 10;
>         if(useVBO)
>         {
>             vertexBuffers = GLAllocation.createDirectIntBuffer(vboCount);
>             ARBVertexBufferObject.glGenBuffersARB(vertexBuffers);
>         }
>     }
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/TileEntityFurnace.java ../src_work/minecraft/net/minecraft/src/TileEntityFurnace.java
199c199
<         ItemStack itemstack = FurnaceRecipes.smelting().getSmeltingResult(furnaceItemStacks[0].getItem().shiftedIndex);
---
>         ItemStack itemstack = FurnaceRecipes.smelting().getSmeltingResult(furnaceItemStacks[0]);
225c225
<         ItemStack itemstack = FurnaceRecipes.smelting().getSmeltingResult(furnaceItemStacks[0].getItem().shiftedIndex);
---
>         ItemStack itemstack = FurnaceRecipes.smelting().getSmeltingResult(furnaceItemStacks[0]);
230c230
<         if(furnaceItemStacks[2].itemID == itemstack.itemID)
---
>         if(furnaceItemStacks[2].isItemEqual(itemstack))
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/TileEntityRendererPiston.java ../src_work/minecraft/net/minecraft/src/TileEntityRendererPiston.java
6a7
> import net.minecraft.src.forge.ForgeHooksClient;
40a42
> 	    ForgeHooksClient.beforeBlockRender(block,field_31071_b);
60a63
> 	    ForgeHooksClient.afterBlockRender(block,field_31071_b);
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/World.java ../src_work/minecraft/net/minecraft/src/World.java
316c316,320
<         return getBlockId(i, j, k) == 0;
---
>     	int iBlockID = getBlockId( i, j, k );
> 
>     	if ( iBlockID == 0 )
>     		return true;
> 	return Block.blocksList[iBlockID].isAirBlock(this,i,j,k);
1610c1614,1617
<                         }
---
>                         } else {
> 				if(j2>0 && Block.blocksList[j2].isBlockBurning(this,k1,l1,i2))
> 					return true;
> 			}
1903c1910,1922
<             return block.blockMaterial.getIsTranslucent() && block.renderAsNormalBlock();
---
>             return block.blockMaterial.getIsTranslucent() && block.isBlockNormalCube(this, i, j, k);
>         }
>     }
>     
>     public boolean isBlockSolidOnSide(int i, int j, int k, int side)
>     {
>         Block block = Block.blocksList[getBlockId(i, j, k)];
>         if(block == null)
>         {
>             return false;
>         } else
>         {
>             return block.blockMaterial.getIsTranslucent() && block.isBlockSolidOnSide(this, i, j, k, side);
2427a2447
> 	if(block!=null && block.isBlockReplaceable(this,j,k,l)) block=null;
2916c2936
<     protected int autosavePeriod;
---
>     public int autosavePeriod;
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/WorldRenderer.java ../src_work/minecraft/net/minecraft/src/WorldRenderer.java
7a8,10
> 
> import net.minecraft.src.forge.ForgeHooksClient;
> 
128,129c131,134
<                             tessellator.startDrawingQuads();
<                             tessellator.setTranslationD(-posX, -posY, -posZ);
---
> 
> 			    ForgeHooksClient.beforeRenderPass(i2);
>                             Tessellator.instance.startDrawingQuads();
>                             Tessellator.instance.setTranslationD(-posX, -posY, -posZ);
138a144
> 
141,149c147,154
<                         if(j3 != i2)
<                         {
<                             flag = true;
<                             continue;
<                         }
<                         if(j3 == i2)
<                         {
<                             flag1 |= renderblocks.renderBlockByRenderType(block, l2, j2, k2);
<                         }
---
> 			if(j3>i2) flag=true;
> 
> 			if(!ForgeHooksClient.canRenderInPass(block,i2))
> 				continue;
> 
> 			ForgeHooksClient.beforeBlockRender(block, renderblocks);
> 			flag1 |= renderblocks.renderBlockByRenderType(block, l2, j2, k2);
> 			ForgeHooksClient.afterBlockRender(block, renderblocks);
158c163,164
<                 tessellator.draw();
---
> 		ForgeHooksClient.afterRenderPass(i2);
>                 Tessellator.instance.draw();
161c167
<                 tessellator.setTranslationD(0.0D, 0.0D, 0.0D);
---
>                 Tessellator.instance.setTranslationD(0.0D, 0.0D, 0.0D);
254d259
<     private static Tessellator tessellator;
285,288d289
<     static 
<     {
<         tessellator = Tessellator.instance;
<     }
diff -rN -r --strip-trailing-cr ../src_base/minecraft/net/minecraft/src/mod_Reforged.java ../src_work/minecraft/net/minecraft/src/mod_Reforged.java
0a1,40
> /**
>  * This software is provided under the terms of the Minecraft Forge Public 
>  * License v1.0.
>  */
> 
> package net.minecraft.src;
> 
> import net.minecraft.src.forge.ForgeHooks;
> import net.minecraft.src.reforged.IReachEntity;
> import net.minecraft.src.reforged.Reforged;
> import net.minecraft.src.reforged.ReforgedHooks;
> 
> public class mod_Reforged extends BaseModMp implements IReachEntity {
> 
> 	final boolean testEnabled = false;
> 	
> 	public mod_Reforged() {
> 		if (testEnabled)
> 			Reforged.reachAdd(this);
> 	}
> 	
> 	@Override
> 	public String Version() {
> 		return String.format("[Forge %d.%d.%d, Reforged %d.%d.%d]",
>                 ForgeHooks.majorVersion,    	ForgeHooks.minorVersion, 	ForgeHooks.revisionVersion, 
>                 ReforgedHooks.majorVersion,    	ReforgedHooks.minorVersion, ReforgedHooks.revisionVersion
>                 );
> 	}
> 
> 	@Override
> 	public boolean reachEntityItemMatches(ItemStack itemstack) {
> 		return testEnabled;
> 	}
> 
> 	@Override
> 	public float getReachEntity(ItemStack itemstack) {
> 		return 100f;
> 	}
> 
> }
\ No newline at end of file
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/server/MinecraftServ# ../src_work/minecraft_server/net/minecraft/server/MinecraftServ#
2c2,20
< *** 332,369 ****
---
> *** 445,450 ****
>                       interruptedexception1.printStackTrace();
>                   }
>               }
>               try
>               {
>                   func_6013_g();
> --- 445,453 ----
>                       interruptedexception1.printStackTrace();
>                   }
>               }
> +         }
> +         finally
> +         {
>               try
>               {
>                   func_6013_g();
> ***************
> *** 458,495 ****
41c59
< --- 335,341 ----
---
> --- 461,467 ----
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/Block.java ../src_work/minecraft_server/net/minecraft/src/Block.java
5a6
> import net.minecraft.src.forge.ForgeHooks;
217a219,223
>     
>     public int quantityDropped(int i, Random random)
>     {
>         return quantityDropped(random);
>     }
223a230,232
>     /* FORGE: This function isn't called by Minecraft anymore.  Use
>      * blockStrength(EntityPlayer,int) instead.
>      */
226,236c235
<         if(blockHardness < 0.0F)
<         {
<             return 0.0F;
<         }
<         if(!entityplayer.canHarvestBlock(this))
<         {
<             return 1.0F / blockHardness / 100F;
<         } else
<         {
<             return entityplayer.getCurrentPlayerStrVsBlock(this) / blockHardness / 30F;
<         }
---
> 	    return blockStrength(entityplayer,0);
250c249
<         int i1 = quantityDropped(world.rand);
---
>         int i1 = quantityDropped(l, world.rand);
526a526,599
>     }
> 
>     /* FORGE: Implement and return true if you wish this block to behave
>      * like a ladder when the player is inside.
>      */
>     public boolean isLadder() {
> 	return false;
>     }
> 
>     /* FORGE: Return true if the block is a normal, solid cube.  This
>      * determines indirect power state, entity ejection from blocks, and a few
>      * others.
>      */
>     public boolean isBlockNormalCube(World world, int i, int j, int k) {
> 	    return blockMaterial.getIsOpaque() && isACube();
>     }
> 
>     /* FORGE: Return true if the block is solid on the given side.  This
>      * is used by placement logic. */
>     public boolean isBlockSolidOnSide( World world, int i, int j, int k,
> 		    int side ) {
> 	    return isBlockNormalCube(world,i,j,k);
>     }
> 
>     /* FORGE: Return true if the player can place a new block in the block
>      * occupied by this one, like water, lava, fire, etc.
>      */
>     public boolean isBlockReplaceable( World world, int i, int j, int k ) {
> 	    return false;
>     }
> 
>     /* FORGE: Return true if this block should set fire and deal fire damage
>      * to entities coming into contact with it, false otherwise.
>      */
>     public boolean isBlockBurning( World world, int i, int j, int k ) {
> 	    return false;
>     }
> 
>     /* FORGE: Return true if this block should be treated as an air block
>      * by the rest of the code, false otherwise.  This method is primarily
>      * useful for creating pure logic-blocks that will be invisible 
>      * to the player and otherwise interact as air would.  
>      */	
>     public boolean isAirBlock( World world, int i, int j, int k ) {
> 	    return false;
>     }
> 
>     /* FORGE: Return the block hardness with metadata 'md'.
>      */
>     public float getHardness(int md) {
> 	    return blockHardness;
>     }
> 
>     /* FORGE: Return the block strength of the block at i,j,k against the
>      * player.
>      */
>     public float blockStrength(World world, EntityPlayer player,
> 		    int i, int j, int k) {
> 	    int md=world.getBlockMetadata(i,j,k);
> 	    return blockStrength(player,md);
>     }
> 
>     /* FORGE: Return the block strength of a prototypical block with metadata
>      * 'md' against the player.
>      */
>     public float blockStrength(EntityPlayer player, int md) {
> 	    return ForgeHooks.blockStrength(this,player,md);
>     }
> 
>     /* FORGE: Return true if the player can harvest a prototypical block with
>      * metadata 'md'.
>      */
>     public boolean canHarvestBlock(EntityPlayer player, int md) {
> 	    return ForgeHooks.canHarvestBlock(this,player,md);
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/BlockButton.java ../src_work/minecraft_server/net/minecraft/src/BlockButton.java
44c44
<         if(l == 2 && world.isBlockNormalCube(i, j, k + 1))
---
>         if(l == 2 && world.isBlockSolidOnSide(i, j, k + 1,2))
48c48
<         if(l == 3 && world.isBlockNormalCube(i, j, k - 1))
---
>         if(l == 3 && world.isBlockSolidOnSide(i, j, k - 1,3))
52c52
<         if(l == 4 && world.isBlockNormalCube(i + 1, j, k))
---
>         if(l == 4 && world.isBlockSolidOnSide(i + 1, j, k,4))
56c56
<         return l == 5 && world.isBlockNormalCube(i - 1, j, k);
---
>         return l == 5 && world.isBlockSolidOnSide(i - 1, j, k,5);
61c61
<         if(world.isBlockNormalCube(i - 1, j, k))
---
>         if(world.isBlockSolidOnSide(i - 1, j, k,5))
65c65
<         if(world.isBlockNormalCube(i + 1, j, k))
---
>         if(world.isBlockSolidOnSide(i + 1, j, k,4))
69c69
<         if(world.isBlockNormalCube(i, j, k - 1))
---
>         if(world.isBlockSolidOnSide(i, j, k - 1,3))
73c73
<         return world.isBlockNormalCube(i, j, k + 1);
---
>         return world.isBlockSolidOnSide(i, j, k + 1,2);
81c81
<         if(l == 2 && world.isBlockNormalCube(i, j, k + 1))
---
>         if(l == 2 && world.isBlockSolidOnSide(i, j, k + 1,2))
85c85
<         if(l == 3 && world.isBlockNormalCube(i, j, k - 1))
---
>         if(l == 3 && world.isBlockSolidOnSide(i, j, k - 1,3))
89c89
<         if(l == 4 && world.isBlockNormalCube(i + 1, j, k))
---
>         if(l == 4 && world.isBlockSolidOnSide(i + 1, j, k,4))
93c93
<         if(l == 5 && world.isBlockNormalCube(i - 1, j, k))
---
>         if(l == 5 && world.isBlockSolidOnSide(i - 1, j, k,5))
105c105
<         if(world.isBlockNormalCube(i - 1, j, k))
---
>         if(world.isBlockSolidOnSide(i - 1, j, k,5))
109c109
<         if(world.isBlockNormalCube(i + 1, j, k))
---
>         if(world.isBlockSolidOnSide(i + 1, j, k,4))
113c113
<         if(world.isBlockNormalCube(i, j, k - 1))
---
>         if(world.isBlockSolidOnSide(i, j, k - 1,3))
117c117
<         return !world.isBlockNormalCube(i, j, k + 1) ? 1 : 4;
---
>         return !world.isBlockSolidOnSide(i, j, k + 1,2) ? 1 : 4;
126c126
<             if(!world.isBlockNormalCube(i - 1, j, k) && i1 == 1)
---
>             if(!world.isBlockSolidOnSide(i - 1, j, k,5) && i1 == 1)
130c130
<             if(!world.isBlockNormalCube(i + 1, j, k) && i1 == 2)
---
>             if(!world.isBlockSolidOnSide(i + 1, j, k,4) && i1 == 2)
134c134
<             if(!world.isBlockNormalCube(i, j, k - 1) && i1 == 3)
---
>             if(!world.isBlockSolidOnSide(i, j, k - 1,3) && i1 == 3)
138c138
<             if(!world.isBlockNormalCube(i, j, k + 1) && i1 == 4)
---
>             if(!world.isBlockSolidOnSide(i, j, k + 1,2) && i1 == 4)
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/BlockChest.java ../src_work/minecraft_server/net/minecraft/src/BlockChest.java
143c143
<         if(world.isBlockNormalCube(i, j + 1, k))
---
>         if(world.isBlockSolidOnSide(i, j + 1, k,0))
147c147
<         if(world.getBlockId(i - 1, j, k) == blockID && world.isBlockNormalCube(i - 1, j + 1, k))
---
>         if(world.getBlockId(i - 1, j, k) == blockID && world.isBlockSolidOnSide(i - 1, j + 1, k,0))
151c151
<         if(world.getBlockId(i + 1, j, k) == blockID && world.isBlockNormalCube(i + 1, j + 1, k))
---
>         if(world.getBlockId(i + 1, j, k) == blockID && world.isBlockSolidOnSide(i + 1, j + 1, k,0))
155c155
<         if(world.getBlockId(i, j, k - 1) == blockID && world.isBlockNormalCube(i, j + 1, k - 1))
---
>         if(world.getBlockId(i, j, k - 1) == blockID && world.isBlockSolidOnSide(i, j + 1, k - 1,0))
159c159
<         if(world.getBlockId(i, j, k + 1) == blockID && world.isBlockNormalCube(i, j + 1, k + 1))
---
>         if(world.getBlockId(i, j, k + 1) == blockID && world.isBlockSolidOnSide(i, j + 1, k + 1,0))
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/BlockDoor.java ../src_work/minecraft_server/net/minecraft/src/BlockDoor.java
170c170
<             if(!world.isBlockNormalCube(i, j - 1, k))
---
>             if(!world.isBlockSolidOnSide(i, j - 1, k,1))
233c233
<             return world.isBlockNormalCube(i, j - 1, k) && super.canPlaceBlockAt(world, i, j, k) && super.canPlaceBlockAt(world, i, j + 1, k);
---
>             return world.isBlockSolidOnSide(i, j - 1, k,1) && super.canPlaceBlockAt(world, i, j, k) && super.canPlaceBlockAt(world, i, j + 1, k);
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/BlockLadder.java ../src_work/minecraft_server/net/minecraft/src/BlockLadder.java
42a43,47
>     /* FORGE: Implemented base method, see Block.isLadder */
>     public boolean isLadder() {
> 	return true;
>     }
> 
55c60
<         if(world.isBlockNormalCube(i - 1, j, k))
---
>         if(world.isBlockSolidOnSide(i - 1, j, k,5))
59c64
<         if(world.isBlockNormalCube(i + 1, j, k))
---
>         if(world.isBlockSolidOnSide(i + 1, j, k,4))
63c68
<         if(world.isBlockNormalCube(i, j, k - 1))
---
>         if(world.isBlockSolidOnSide(i, j, k - 1,3))
67c72
<         return world.isBlockNormalCube(i, j, k + 1);
---
>         return world.isBlockSolidOnSide(i, j, k + 1,2);
73c78
<         if((i1 == 0 || l == 2) && world.isBlockNormalCube(i, j, k + 1))
---
>         if((i1 == 0 || l == 2) && world.isBlockSolidOnSide(i, j, k + 1,2))
77c82
<         if((i1 == 0 || l == 3) && world.isBlockNormalCube(i, j, k - 1))
---
>         if((i1 == 0 || l == 3) && world.isBlockSolidOnSide(i, j, k - 1,3))
81c86
<         if((i1 == 0 || l == 4) && world.isBlockNormalCube(i + 1, j, k))
---
>         if((i1 == 0 || l == 4) && world.isBlockSolidOnSide(i + 1, j, k,4))
85c90
<         if((i1 == 0 || l == 5) && world.isBlockNormalCube(i - 1, j, k))
---
>         if((i1 == 0 || l == 5) && world.isBlockSolidOnSide(i - 1, j, k,5))
96c101
<         if(i1 == 2 && world.isBlockNormalCube(i, j, k + 1))
---
>         if(i1 == 2 && world.isBlockSolidOnSide(i, j, k + 1,2))
100c105
<         if(i1 == 3 && world.isBlockNormalCube(i, j, k - 1))
---
>         if(i1 == 3 && world.isBlockSolidOnSide(i, j, k - 1,3))
104c109
<         if(i1 == 4 && world.isBlockNormalCube(i + 1, j, k))
---
>         if(i1 == 4 && world.isBlockSolidOnSide(i + 1, j, k,4))
108c113
<         if(i1 == 5 && world.isBlockNormalCube(i - 1, j, k))
---
>         if(i1 == 5 && world.isBlockSolidOnSide(i - 1, j, k,5))
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/BlockLever.java ../src_work/minecraft_server/net/minecraft/src/BlockLever.java
38c38
<         if(l == 1 && world.isBlockNormalCube(i, j - 1, k))
---
>         if(l == 1 && world.isBlockSolidOnSide(i, j - 1, k,1))
42c42
<         if(l == 2 && world.isBlockNormalCube(i, j, k + 1))
---
>         if(l == 2 && world.isBlockSolidOnSide(i, j, k + 1,2))
46c46
<         if(l == 3 && world.isBlockNormalCube(i, j, k - 1))
---
>         if(l == 3 && world.isBlockSolidOnSide(i, j, k - 1,3))
50c50
<         if(l == 4 && world.isBlockNormalCube(i + 1, j, k))
---
>         if(l == 4 && world.isBlockSolidOnSide(i + 1, j, k,4))
54c54
<         return l == 5 && world.isBlockNormalCube(i - 1, j, k);
---
>         return l == 5 && world.isBlockSolidOnSide(i - 1, j, k,5);
59c59
<         if(world.isBlockNormalCube(i - 1, j, k))
---
>         if(world.isBlockSolidOnSide(i - 1, j, k,5))
63c63
<         if(world.isBlockNormalCube(i + 1, j, k))
---
>         if(world.isBlockSolidOnSide(i + 1, j, k,4))
67c67
<         if(world.isBlockNormalCube(i, j, k - 1))
---
>         if(world.isBlockSolidOnSide(i, j, k - 1,3))
71c71
<         if(world.isBlockNormalCube(i, j, k + 1))
---
>         if(world.isBlockSolidOnSide(i, j, k + 1,2))
75c75
<         return world.isBlockNormalCube(i, j - 1, k);
---
>         return world.isBlockSolidOnSide(i, j - 1, k,1);
84c84
<         if(l == 1 && world.isBlockNormalCube(i, j - 1, k))
---
>         if(l == 1 && world.isBlockSolidOnSide(i, j - 1, k,1))
88c88
<         if(l == 2 && world.isBlockNormalCube(i, j, k + 1))
---
>         if(l == 2 && world.isBlockSolidOnSide(i, j, k + 1,2))
92c92
<         if(l == 3 && world.isBlockNormalCube(i, j, k - 1))
---
>         if(l == 3 && world.isBlockSolidOnSide(i, j, k - 1,3))
96c96
<         if(l == 4 && world.isBlockNormalCube(i + 1, j, k))
---
>         if(l == 4 && world.isBlockSolidOnSide(i + 1, j, k,4))
100c100
<         if(l == 5 && world.isBlockNormalCube(i - 1, j, k))
---
>         if(l == 5 && world.isBlockSolidOnSide(i - 1, j, k,5))
122c122
<             if(!world.isBlockNormalCube(i - 1, j, k) && i1 == 1)
---
>             if(!world.isBlockSolidOnSide(i - 1, j, k,5) && i1 == 1)
126c126
<             if(!world.isBlockNormalCube(i + 1, j, k) && i1 == 2)
---
>             if(!world.isBlockSolidOnSide(i + 1, j, k,4) && i1 == 2)
130c130
<             if(!world.isBlockNormalCube(i, j, k - 1) && i1 == 3)
---
>             if(!world.isBlockSolidOnSide(i, j, k - 1,3) && i1 == 3)
134c134
<             if(!world.isBlockNormalCube(i, j, k + 1) && i1 == 4)
---
>             if(!world.isBlockSolidOnSide(i, j, k + 1,2) && i1 == 4)
138c138
<             if(!world.isBlockNormalCube(i, j - 1, k) && i1 == 5)
---
>             if(!world.isBlockSolidOnSide(i, j - 1, k,1) && i1 == 5)
142c142
<             if(!world.isBlockNormalCube(i, j - 1, k) && i1 == 6)
---
>             if(!world.isBlockSolidOnSide(i, j - 1, k,1) && i1 == 6)
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/BlockPressurePlate.java ../src_work/minecraft_server/net/minecraft/src/BlockPressurePlate.java
49c49
<         return world.isBlockNormalCube(i, j - 1, k);
---
>         return world.isBlockSolidOnSide(i, j - 1, k,1);
59c59
<         if(!world.isBlockNormalCube(i, j - 1, k))
---
>         if(!world.isBlockSolidOnSide(i, j - 1, k,1))
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/BlockRail.java ../src_work/minecraft_server/net/minecraft/src/BlockRail.java
95c95
<         return world.isBlockNormalCube(i, j - 1, k);
---
>         return world.isBlockSolidOnSide(i, j - 1, k,1);
119c119
<         if(!world.isBlockNormalCube(i, j - 1, k))
---
>         if(!world.isBlockSolidOnSide(i, j - 1, k,1))
123c123
<         if(j1 == 2 && !world.isBlockNormalCube(i + 1, j, k))
---
>         if(j1 == 2 && !world.isBlockSolidOnSide(i + 1, j, k,1))
127c127
<         if(j1 == 3 && !world.isBlockNormalCube(i - 1, j, k))
---
>         if(j1 == 3 && !world.isBlockSolidOnSide(i - 1, j, k,1))
131c131
<         if(j1 == 4 && !world.isBlockNormalCube(i, j, k - 1))
---
>         if(j1 == 4 && !world.isBlockSolidOnSide(i, j, k - 1,1))
135c135
<         if(j1 == 5 && !world.isBlockNormalCube(i, j, k + 1))
---
>         if(j1 == 5 && !world.isBlockSolidOnSide(i, j, k + 1,1))
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/BlockRedstoneRepeater.java ../src_work/minecraft_server/net/minecraft/src/BlockRedstoneRepeater.java
30c30
<         if(!world.isBlockNormalCube(i, j - 1, k))
---
>         if(!world.isBlockSolidOnSide(i, j - 1, k,1))
41c41
<         if(!world.isBlockNormalCube(i, j - 1, k))
---
>         if(!world.isBlockSolidOnSide(i, j - 1, k,1))
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/BlockRedstoneWire.java ../src_work/minecraft_server/net/minecraft/src/BlockRedstoneWire.java
5a6
> import net.minecraft.src.forge.*;
46c47
<         return world.isBlockNormalCube(i, j - 1, k);
---
>         return world.isBlockSolidOnSide(i, j - 1, k, 1);
415a417,420
> 	if(Block.blocksList[i1] instanceof IConnectRedstone) {
> 		IConnectRedstone icr=(IConnectRedstone)Block.blocksList[i1];
> 		return icr.canConnectRedstone(iblockaccess,i,j,k,l);
> 	}
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/BlockTorch.java ../src_work/minecraft_server/net/minecraft/src/BlockTorch.java
39c39
<         return world.isBlockNormalCube(i, j, k) || world.getBlockId(i, j, k) == Block.fence.blockID;
---
>         return world.isBlockSolidOnSide(i, j, k,1) || world.getBlockId(i, j, k) == Block.fence.blockID;
44c44
<         if(world.isBlockNormalCube(i - 1, j, k))
---
>         if(world.isBlockSolidOnSide(i - 1, j, k,5))
48c48
<         if(world.isBlockNormalCube(i + 1, j, k))
---
>         if(world.isBlockSolidOnSide(i + 1, j, k,4))
52c52
<         if(world.isBlockNormalCube(i, j, k - 1))
---
>         if(world.isBlockSolidOnSide(i, j, k - 1,3))
56c56
<         if(world.isBlockNormalCube(i, j, k + 1))
---
>         if(world.isBlockSolidOnSide(i, j, k + 1,2))
70c70
<         if(l == 2 && world.isBlockNormalCube(i, j, k + 1))
---
>         if(l == 2 && world.isBlockSolidOnSide(i, j, k + 1,2))
74c74
<         if(l == 3 && world.isBlockNormalCube(i, j, k - 1))
---
>         if(l == 3 && world.isBlockSolidOnSide(i, j, k - 1,3))
78c78
<         if(l == 4 && world.isBlockNormalCube(i + 1, j, k))
---
>         if(l == 4 && world.isBlockSolidOnSide(i + 1, j, k,4))
82c82
<         if(l == 5 && world.isBlockNormalCube(i - 1, j, k))
---
>         if(l == 5 && world.isBlockSolidOnSide(i - 1, j, k,5))
100c100
<         if(world.isBlockNormalCube(i - 1, j, k))
---
>         if(world.isBlockSolidOnSide(i - 1, j, k,5))
104c104
<         if(world.isBlockNormalCube(i + 1, j, k))
---
>         if(world.isBlockSolidOnSide(i + 1, j, k,4))
108c108
<         if(world.isBlockNormalCube(i, j, k - 1))
---
>         if(world.isBlockSolidOnSide(i, j, k - 1,3))
112c112
<         if(world.isBlockNormalCube(i, j, k + 1))
---
>         if(world.isBlockSolidOnSide(i, j, k + 1,2))
129c129
<             if(!world.isBlockNormalCube(i - 1, j, k) && i1 == 1)
---
>             if(!world.isBlockSolidOnSide(i - 1, j, k,5) && i1 == 1)
133c133
<             if(!world.isBlockNormalCube(i + 1, j, k) && i1 == 2)
---
>             if(!world.isBlockSolidOnSide(i + 1, j, k,4) && i1 == 2)
137c137
<             if(!world.isBlockNormalCube(i, j, k - 1) && i1 == 3)
---
>             if(!world.isBlockSolidOnSide(i, j, k - 1,3) && i1 == 3)
141c141
<             if(!world.isBlockNormalCube(i, j, k + 1) && i1 == 4)
---
>             if(!world.isBlockSolidOnSide(i, j, k + 1,2) && i1 == 4)
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/BlockTrapDoor.java ../src_work/minecraft_server/net/minecraft/src/BlockTrapDoor.java
133c133
<         if(!world.isBlockNormalCube(j1, j, k1))
---
>         if(!disableValidation && !world.isBlockSolidOnSide(j1, j, k1, (i1&3)+2))
199c199
<         return world.isBlockNormalCube(i, j, k);
---
>         return world.isBlockSolidOnSide(i, j, k,l);
205a206,209
> 
>     /* FORGE: Set this to allow trapdoors to remain free-floating
>      */
>     public static boolean disableValidation=false;
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/Chunk.java ../src_work/minecraft_server/net/minecraft/src/Chunk.java
5a6
> import net.minecraft.src.forge.*;
229a231,237
> 
> 	if(Block.blocksList[k1] instanceof IOverrideReplace) {
> 		IOverrideReplace iovr=(IOverrideReplace)Block.blocksList[k1];
> 		if(!iovr.canReplaceBlock(worldObj,l1,j,i2,l))
> 			return iovr.getReplacedSuccess();
> 	}
> 
272a281,287
> 
> 	if(Block.blocksList[j1] instanceof IOverrideReplace) {
> 		IOverrideReplace iovr=(IOverrideReplace)Block.blocksList[j1];
> 		if(!iovr.canReplaceBlock(worldObj,k1,j,l1,l))
> 			return iovr.getReplacedSuccess();
> 	}
> 
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/EntityLiving.java ../src_work/minecraft_server/net/minecraft/src/EntityLiving.java
535c535,537
<         return worldObj.getBlockId(i, j, k) == Block.ladder.blockID;
---
> 	Block block=Block.blocksList[worldObj.getBlockId(i,j,k)];
> 	if(block==null) return false;
> 	return block.isLadder();
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/EntityPlayer.java ../src_work/minecraft_server/net/minecraft/src/EntityPlayer.java
8a9,12
> import net.minecraft.src.forge.ArmorProperties;
> import net.minecraft.src.forge.ISpecialArmor;
> import net.minecraft.src.forge.ForgeHooks;
> 
298a303,304
>     /* FORGE: This isn't called anymore
>      */
312a319,336
>     /* FORGE: Extended to allow metadata.
>      */
>     public float getCurrentPlayerStrVsBlock(Block block, int md)
>     {
>         float f = 1.0F;
> 	ItemStack ist=inventory.getCurrentItem();
> 	if(ist!=null) f=ist.getItem().getStrVsBlock(ist,block,md);
>         if(isInsideOfMaterial(Material.water))
>         {
>             f /= 5F;
>         }
>         if(!onGround)
>         {
>             f /= 5F;
>         }
>         return f;
>     }
> 
459a484,502
>     	 boolean doRegularComputation = true;
>          int initialDamage = i;
>          
>          for (ItemStack stack : inventory.armorInventory) {
>              if (stack != null && stack.getItem() instanceof ISpecialArmor) {
>                  ISpecialArmor armor = (ISpecialArmor) stack.getItem();
>                  
>                  ArmorProperties props = armor.getProperties(this, initialDamage, i);                            
>                  i = i - props.damageRemove;
>                  doRegularComputation = doRegularComputation
>                          && props.allowRegularComputation;
>              }
>          }
>          
>          if (!doRegularComputation) {
>              super.damageEntity(i);
>              return;
>          }
>         
504a548
> 	ItemStack orig=inventory.getCurrentItem();
505a550
> 	ForgeHooks.onDestroyCurrentItem(this,orig);
570a616,619
> 	EnumStatus customSleep = ForgeHooks.sleepInBedAt(this, i, j, k);
> 	if (customSleep != null) {
> 	    return customSleep;
> 	}
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/EntityTrackerEntry.java ../src_work/minecraft_server/net/minecraft/src/EntityTrackerEntry.java
16,21c16,21
< //            ModLoaderMp, EntityTrackerEntry2, Packet23VehicleSpawn, ModLoader, 
< //            EntityItem, Packet21PickupSpawn, Packet20NamedEntitySpawn, EntityMinecart, 
< //            EntityBoat, IAnimals, Packet24MobSpawn, EntityLiving, 
< //            EntityFish, EntityArrow, EntitySnowball, EntityFireball, 
< //            EntityEgg, EntityTNTPrimed, EntityFallingSand, Block, 
< //            EntityPainting, Packet25EntityPainting
---
> //            ModLoaderMp, ISpawnable, Packet230ModLoader, EntityTrackerEntry2, 
> //            Packet23VehicleSpawn, ModLoader, EntityItem, Packet21PickupSpawn, 
> //            Packet20NamedEntitySpawn, EntityMinecart, EntityBoat, IAnimals, 
> //            Packet24MobSpawn, EntityLiving, EntityFish, EntityArrow, 
> //            EntitySnowball, EntityFireball, EntityEgg, EntityTNTPrimed, 
> //            EntityFallingSand, Block, EntityPainting, Packet25EntityPainting
240a241,253
>                 if(trackedEntity instanceof ISpawnable)
>                 {
>                     Packet230ModLoader packet230modloader = ((ISpawnable)trackedEntity).getSpawnPacket();
>                     packet230modloader.modId = "Spawn".hashCode();
>                     if(entitytrackerentry2.entityId > 127)
>                     {
>                         packet230modloader.packetType = entitytrackerentry2.entityId - 256;
>                     } else
>                     {
>                         packet230modloader.packetType = entitytrackerentry2.entityId;
>                     }
>                     return packet230modloader;
>                 }
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/Explosion.java ../src_work/minecraft_server/net/minecraft/src/Explosion.java
5a6
> import net.minecraft.src.forge.ISpecialResistance;
68c69,78
<                             f1 -= (Block.blocksList[i5].getExplosionResistance(exploder) + 0.3F) * f2;
---
> 			    if(Block.blocksList[i5] instanceof ISpecialResistance) {
> 				    ISpecialResistance isr=(ISpecialResistance)
> 					   Block.blocksList[i5];
> 				    f1-=(isr.getSpecialExplosionResistance(
> 					worldObj,j4,k4,l4,
> 					explosionX,explosionY,explosionZ,
> 					exploder) + 0.3F) * f2;
> 			    } else {
> 				    f1 -= (Block.blocksList[i5].getExplosionResistance(exploder) + 0.3F) * f2;
> 			    }
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/FurnaceRecipes.java ../src_work/minecraft_server/net/minecraft/src/FurnaceRecipes.java
6a7
> import java.util.Arrays;
15a17,22
> 	private static final FurnaceRecipes smeltingBase = new FurnaceRecipes();
>     
>     /** The list of smelting results. */
>     private Map smeltingList;
>     private Map metaSmeltingList;
> 	
23a31
>         metaSmeltingList = new HashMap();
35a44,46
>     /**
>      * Adds a smelting recipe.
>      */
40a52,56
>     /**
>      * Returns the smelting result of an item.
>      * Deprecated in favor of a metadata sensitive version
>      */
>     @Deprecated
51,53c67,96
<     private static final FurnaceRecipes smeltingBase = new FurnaceRecipes();
<     private Map smeltingList;
< 
---
>     /**
>      * Add a metadata-sensitive furnace recipe
>      * @param itemID The Item ID
>      * @param metadata The Item Metadata
>      * @param itemstack The ItemStack for the result
>      */
>     public void addSmelting(int itemID, int metadata, ItemStack itemstack)
>     {
>         metaSmeltingList.put(Arrays.asList(itemID, metadata), itemstack);
>     }
>     
>     /**
>      * Used to get the resulting ItemStack form a source ItemStack
>      * @param item The Source ItemStack
>      * @return The result ItemStack
>      */
>     public ItemStack getSmeltingResult(ItemStack item) 
>     {
>         if (item == null)
>         {
>             return null;
>         }
>         ItemStack ret = (ItemStack)metaSmeltingList.get(Arrays.asList(item.itemID, item.getItemDamage()));
>         if (ret != null) 
>         {
>             return ret;
>         }
>         return (ItemStack)smeltingList.get(Integer.valueOf(item.itemID));
>     }
>     
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/ISpawnable.java ../src_work/minecraft_server/net/minecraft/src/ISpawnable.java
0a1,15
> // Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
> // Jad home page: http://www.kpdus.com/jad.html
> // Decompiler options: packimports(3) braces deadcode 
> 
> package net.minecraft.src;
> 
> 
> // Referenced classes of package net.minecraft.src:
> //            Packet230ModLoader
> 
> public interface ISpawnable
> {
> 
>     public abstract Packet230ModLoader getSpawnPacket();
> }
\ No newline at end of file
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/Item.java ../src_work/minecraft_server/net/minecraft/src/Item.java
67a68,74
>     /* FORGE: Metadata-sensitive version of getStrVsBlock
>      */
>     public float getStrVsBlock(ItemStack itemstack, Block block, int md)
>     {
> 	    return getStrVsBlock(itemstack,block);
>     }
> 
189a197,217
>     
>     /* =========================================================== FORGE START ===============================================================*/
> 
>     /**
>      * Called before a block is broken.  Return true to prevent default block harvesting.
>      *
>      * Note: In SMP, this is called on both client and server sides!
>      * 
>      * @param itemstack The current ItemStack
>      * @param X The X Position
>      * @param Y The X Position
>      * @param Z The X Position
>      * @param player The Player that is wielding the item
>      * @return True to prevent harvesting, false to continue as normal
>      */
>     public boolean onBlockStartBreak(ItemStack itemstack, int X, int Y, int Z, EntityPlayer player) 
>     {
>         return false;
>     }
> 
>     /* ===========================================================  FORGE END  ===============================================================*/
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/ItemBucket.java ../src_work/minecraft_server/net/minecraft/src/ItemBucket.java
8a9,10
> import net.minecraft.src.forge.MinecraftForge;
> 
57a60,66
>                 ItemStack customBucket = MinecraftForge.fillCustomBucket(world,
>                         i, j, k);
>             	
>             	if (customBucket != null) {
>             		return customBucket;
>             	}
> 
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/ItemInWorldManager.java ../src_work/minecraft_server/net/minecraft/src/ItemInWorldManager.java
5a6
> import net.minecraft.src.forge.*;
32c33,34
<                 float f = block.blockStrength(thisPlayer) * (float)(i + 1);
---
>                 float f = block.blockStrength(thisWorld,thisPlayer,
> 			field_22049_l,field_22048_m,field_22047_n) * (float)(i + 1);
54c56
<         if(i1 > 0 && Block.blocksList[i1].blockStrength(thisPlayer) >= 1.0F)
---
>         if(i1 > 0 && Block.blocksList[i1].blockStrength(thisWorld,thisPlayer,i,j,k) >= 1.0F)
74c76
<                 float f = block.blockStrength(thisPlayer) * (float)(l + 1);
---
>                 float f = block.blockStrength(thisWorld,thisPlayer,i,j,k) * (float)(l + 1);
103a106
>     // blockHarvessted - TYPO IS INTENTIONAL
105a109,113
>     	ItemStack stack = thisPlayer.getCurrentEquippedItem();
>         if (stack != null && stack.getItem().onBlockStartBreak(stack, i, j, k, thisPlayer))
>         {
>             return false;
>         }
120c128
<         if(flag && thisPlayer.canHarvestBlock(Block.blocksList[l]))
---
>         if(flag && Block.blocksList[l].canHarvestBlock(thisPlayer,i1))
137a146
> 		ForgeHooks.onDestroyCurrentItem(entityplayer,itemstack1);
147a157,161
> 	if(itemstack!=null && itemstack.getItem() instanceof IUseItemFirst) {
> 		IUseItemFirst iuif=(IUseItemFirst)itemstack.getItem();
> 		if(iuif.onItemUseFirst(itemstack,entityplayer,world,i,j,k,l))
> 			return true;
> 	}
158c172,176
<             return itemstack.useItem(entityplayer, world, i, j, k, l);
---
>             if(!itemstack.useItem(entityplayer, world, i, j, k, l))
> 		    return false;
>             if(itemstack.stackSize == 0)
> 		ForgeHooks.onDestroyCurrentItem(entityplayer,itemstack);
> 	    return true;
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/ItemShears.java ../src_work/minecraft_server/net/minecraft/src/ItemShears.java
6a7,9
> import java.util.ArrayList;
> 
> import net.minecraft.src.forge.IShearable;
49a53,111
>     
>     @Override
>     public void saddleEntity(ItemStack itemstack, EntityLiving entity)
>     {
>         if (entity.worldObj.singleplayerWorld)
>         {
>             return;
>         }
>         if (entity instanceof IShearable)
>         {
>             IShearable target = (IShearable)entity;
>             if (target.isShearable(itemstack, entity.worldObj, (int)entity.posX, (int)entity.posY, (int)entity.posZ))
>             {
>                 ArrayList<ItemStack> drops = target.onSheared(itemstack, entity.worldObj, (int)entity.posX, (int)entity.posY, (int)entity.posZ);
>                 for(ItemStack stack : drops)
>                 {
>                     EntityItem ent = entity.entityDropItem(stack, 1.0F);
>                     ent.motionY += entity.rand.nextFloat() * 0.05F;
>                     ent.motionX += (entity.rand.nextFloat() - entity.rand.nextFloat()) * 0.1F;
>                     ent.motionZ += (entity.rand.nextFloat() - entity.rand.nextFloat()) * 0.1F;
>                 }
>                 itemstack.damageItem(1, entity);
>             }
>         }
>     }
>     
>     @Override
>      public boolean onBlockStartBreak(ItemStack itemstack, int X, int Y, int Z, EntityPlayer player) 
>      {
>     	
>         if (player.worldObj.singleplayerWorld)
>         {
>             return false;
>         }
>         
>         int id = player.worldObj.getBlockId(X, Y, Z);
>         
>         if ((Block.blocksList[id] != null && Block.blocksList[id] instanceof IShearable))
>         {
>             IShearable target = (IShearable)Block.blocksList[id];
>             if (target.isShearable(itemstack, player.worldObj, X, Y, Z))
>             {
>                 ArrayList<ItemStack> drops = target.onSheared(itemstack, player.worldObj, X, Y, Z);
>                 for(ItemStack stack : drops)
>                 {
>                     float f = 0.7F;
>                     double d  = (double)(player.rand.nextFloat() * f) + (double)(1.0F - f) * 0.5D;
>                     double d1 = (double)(player.rand.nextFloat() * f) + (double)(1.0F - f) * 0.5D;
>                     double d2 = (double)(player.rand.nextFloat() * f) + (double)(1.0F - f) * 0.5D;
>                     EntityItem entityitem = new EntityItem(player.worldObj, (double)X + d, (double)Y + d1, (double)Z + d2, stack);
>                     entityitem.delayBeforeCanPickup = 10;
>                     player.worldObj.entityJoinedWorld(entityitem);
>                 }
>                 itemstack.damageItem(1, player);
>                 player.addStat(StatList.mineBlockStatArray[id], 1);
>             }
>         }
>         return false;
>      }
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/ItemTool.java ../src_work/minecraft_server/net/minecraft/src/ItemTool.java
6a7,8
> import java.util.Arrays;
> import net.minecraft.src.forge.ForgeHooks;
39a42,49
>     /* FORGE: Overridden to allow custom tool effectiveness
>      */
>     public float getStrVsBlock(ItemStack itemstack, Block block, int md) {
> 	    if(ForgeHooks.isToolEffective(itemstack,block,md))
>                 return efficiencyOnProperMaterial;
> 	    return getStrVsBlock(itemstack,block);
>     }
> 
58,59c68,69
<     private float efficiencyOnProperMaterial;
<     private int damageVsEntity;
---
>     public float efficiencyOnProperMaterial;
>     public int damageVsEntity;
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/MovingObjectPosition.java ../src_work/minecraft_server/net/minecraft/src/MovingObjectPosition.java
37a38,40
> 
>     // Added for RedPower subblocks.
>     public int subHit=-1;
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/NetServerHandler.java ../src_work/minecraft_server/net/minecraft/src/NetServerHandler.java
10a11
> import net.minecraft.src.reforged.Reforged;
534c535,537
<         if(entity != null && playerEntity.canEntityBeSeen(entity) && playerEntity.getDistanceSqToEntity(entity) < 36D)
---
>         double distance = Reforged.reachGetEntityPlayer(playerEntity);
>         distance = distance * distance;
>         if(entity != null && playerEntity.canEntityBeSeen(entity) && playerEntity.getDistanceSqToEntity(entity) <= distance)
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/PlayerInstance.java ../src_work/minecraft_server/net/minecraft/src/PlayerInstance.java
172,174c172,174
<                 int j1 = chunkX * 16 + (numBlocksToUpdate >> 12 & 0xf);
<                 int i2 = numBlocksToUpdate & 0xff;
<                 int k2 = chunkZ * 16 + (numBlocksToUpdate >> 8 & 0xf);
---
>                 int j1 = chunkX * 16 + (blocksToUpdate[k] >> 12 & 0xf);
>                 int i2 = blocksToUpdate[k] & 0xff;
>                 int k2 = chunkZ * 16 + (blocksToUpdate[k] >> 8 & 0xf);
177d176
<                     System.out.println("Sending!");
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/SlotCrafting.java ../src_work/minecraft_server/net/minecraft/src/SlotCrafting.java
5a6
> import net.minecraft.src.forge.ForgeHooks;
62a64
> 	ForgeHooks.onTakenFromCrafting(field_25004_e, itemstack, craftMatrix);
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/TileEntityFurnace.java ../src_work/minecraft_server/net/minecraft/src/TileEntityFurnace.java
10,11c10,11
< //            NBTTagList, World, BlockFurnace, FurnaceRecipes, 
< //            Item, Block, Material, ModLoader, 
---
> //            NBTTagList, World, Item, BlockFurnace, 
> //            FurnaceRecipes, Block, Material, ModLoader, 
116a117,130
>     public int getCookProgressScaled(int i)
>     {
>         return (furnaceCookTime * i) / 200;
>     }
> 
>     public int getBurnTimeRemainingScaled(int i)
>     {
>         if(currentItemBurnTime == 0)
>         {
>             currentItemBurnTime = 200;
>         }
>         return (furnaceBurnTime * i) / currentItemBurnTime;
>     }
> 
130c144
<         if(!worldObj.singleplayerWorld)
---
>         if(true)
140c154,160
<                         furnaceItemStacks[1].stackSize--;
---
>                         if(furnaceItemStacks[1].getItem().hasContainerItem())
>                         {
>                             furnaceItemStacks[1] = new ItemStack(furnaceItemStacks[1].getItem().getContainerItem());
>                         } else
>                         {
>                             furnaceItemStacks[1].stackSize--;
>                         }
179c199
<         ItemStack itemstack = FurnaceRecipes.smelting().getSmeltingResult(furnaceItemStacks[0].getItem().shiftedIndex);
---
>         ItemStack itemstack = FurnaceRecipes.smelting().getSmeltingResult(furnaceItemStacks[0]);
195,197d214
<         } else
<         {
<             return furnaceItemStacks[2].stackSize < itemstack.getMaxStackSize();
198a216
>         return furnaceItemStacks[2].stackSize < itemstack.getMaxStackSize();
207c225
<         ItemStack itemstack = FurnaceRecipes.smelting().getSmeltingResult(furnaceItemStacks[0].getItem().shiftedIndex);
---
>         ItemStack itemstack = FurnaceRecipes.smelting().getSmeltingResult(furnaceItemStacks[0]);
212c230,237
<         if(furnaceItemStacks[2].itemID == itemstack.itemID)
---
>         if(furnaceItemStacks[2].isItemEqual(itemstack))
>         {
>             furnaceItemStacks[2].stackSize += itemstack.stackSize;
>         }
>         if(furnaceItemStacks[0].getItem().hasContainerItem())
>         {
>             furnaceItemStacks[0] = new ItemStack(furnaceItemStacks[0].getItem().getContainerItem());
>         } else
214c239
<             furnaceItemStacks[2].stackSize++;
---
>             furnaceItemStacks[0].stackSize--;
216d240
<         furnaceItemStacks[0].stackSize--;
244a269,272
>         }
>         if(i == Block.sapling.blockID)
>         {
>             return 100;
247c275
<             return i == Block.sapling.blockID ? 100 : ModLoader.AddAllFuel(i);
---
>             return ModLoader.AddAllFuel(i);
256,258d283
<         } else
<         {
<             return entityplayer.getDistanceSq((double)xCoord + 0.5D, (double)yCoord + 0.5D, (double)zCoord + 0.5D) <= 64D;
259a285
>         return entityplayer.getDistanceSq((double)xCoord + 0.5D, (double)yCoord + 0.5D, (double)zCoord + 0.5D) <= 64D;
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/World.java ../src_work/minecraft_server/net/minecraft/src/World.java
169c169,173
<         return getBlockId(i, j, k) == 0;
---
>     	int iBlockID = getBlockId( i, j, k );
> 
>     	if ( iBlockID == 0 )
>     		return true;
> 	return Block.blocksList[iBlockID].isAirBlock(this,i,j,k);
1411c1415,1418
<                         }
---
>                         } else {
> 				if(j2>0 && Block.blocksList[j2].isBlockBurning(this,k1,l1,i2))
> 					return true;
> 			}
1684,1690c1691,1702
<         if(block == null)
<         {
<             return false;
<         } else
<         {
<             return block.blockMaterial.getIsOpaque() && block.isACube();
<         }
---
>         if(block == null) return false;
> 	return block.isBlockNormalCube(this,i,j,k);
>     }
> 
>     /* FORGE: Determine if the given block is considered solid on the
>      * specified side.  Used by placement logic.
>      */
>     public boolean isBlockSolidOnSide(int i, int j, int k, int side)
>     {
>         Block block = Block.blocksList[getBlockId(i, j, k)];
>         if(block == null) return false;
> 	return block.isBlockSolidOnSide(this,i,j,k,side);
2180a2193
> 	if(block!=null && block.isBlockReplaceable(this,j,k,l)) block=null;
2604c2617
<     protected int autosavePeriod;
---
>     public int autosavePeriod;
diff -rN -r --strip-trailing-cr ../src_base/minecraft_server/net/minecraft/src/mod_Reforged.java ../src_work/minecraft_server/net/minecraft/src/mod_Reforged.java
0a1,40
> /**
>  * This software is provided under the terms of the Minecraft Forge Public 
>  * License v1.0.
>  */
> 
> package net.minecraft.src;
> 
> import net.minecraft.src.forge.ForgeHooks;
> import net.minecraft.src.reforged.IReachEntity;
> import net.minecraft.src.reforged.Reforged;
> import net.minecraft.src.reforged.ReforgedHooks;
> 
> public class mod_Reforged extends BaseModMp implements IReachEntity {
> 
> 	final boolean testEnabled = false;
> 	
> 	public mod_Reforged() {
> 		if (testEnabled)
> 			Reforged.reachAdd(this);
> 	}
> 	
> 	@Override
> 	public String Version() {
> 		return String.format("[Forge %d.%d.%d, Reforged %d.%d.%d]",
>                 ForgeHooks.majorVersion,    	ForgeHooks.minorVersion, 	ForgeHooks.revisionVersion, 
>                 ReforgedHooks.majorVersion,    	ReforgedHooks.minorVersion, ReforgedHooks.revisionVersion
>                 );
> 	}
> 
> 	@Override
> 	public boolean reachEntityItemMatches(ItemStack itemstack) {
> 		return testEnabled;
> 	}
> 
> 	@Override
> 	public float getReachEntity(ItemStack itemstack) {
> 		return 100f;
> 	}
> 
> }
\ No newline at end of file
